#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Скрипт предварительной обработки текста для
# синтезатора речи RHVoice Ольги Яковлевой
# By Capricorn2001

from re import sub, finditer

r_ca = (
  (
    (
      (
        'ноля',
        ('тысячи', 'тысяч'),
        ('миллиона', 'миллионов'),
        ('миллиарда', 'миллиардов'),
        ('триллиона', 'триллионов'),
        ('квадриллиона', 'квадриллионов'),
        ('квинтиллиона', 'квинтиллионов'),
        ('секстиллиона', 'секстиллионов'),
        ('септиллиона', 'септиллионов'),
        ('октиллиона', 'октиллионов')
      ),
      'ста',
      'двухсот',
      'трёхсот',
      'четырехсот',
      'пятисот',
      'шестисот',
      'семисот',
      'восьмисот',
      'девятисот'
    ),
    'десяти',
    'двадцати',
    'тридцати',
    'сорока',
    'пятидесяти',
    'шестидесяти',
    'семидесяти',
    'восьмидесяти', 
    'девяноста'
  ),
  ('одного', 'одиннадцати'),
  ('двух', 'двенадцати'),
  ('трёх', 'тринадцати'),
  ('четырёх', 'четырнадцати'),
  ('пяти', 'пятнадцати'),
  ('шести', 'шестнадцати'),
  ('семи', 'семнадцати'),
  ('восьми', 'восемнадцати'),
  ('девяти', 'девятнадцати')
)
d_ca = (
  (
    (
      (
        'нолю',
        ('тысяче', 'тысячам'),
        ('миллиону', 'миллионам'),
        ('миллиарду', 'миллиардам'),
        ('триллиону', 'триллионам'),
        ('квадриллиону', 'квадриллионам'),
        ('квинтиллиону', 'квинтиллионам'),
        ('секстиллиону', 'секстиллионам'),
        ('септиллиону', 'септиллионам'),
        ('октиллиону', 'октиллионам')
      ),
      'ста',
      'двумстам',
      'тремстам',
      'четыремстам',
      'пятистам',
      'шестистам',
      'семистам',
      'восьмистам',
      'девятистам'
    ),
    'десяти',
    'двадцати',
    'тридцати',
    'сорока',
    'пятидесяти',
    'шестидесяти',
    'семидесяти',
    'восьмидесяти', 
    'девяноста'
  ),
  ('одному', 'одиннадцати'),
  ('двум', 'двенадцати'),
  ('трём', 'тринадцати'),
  ('четырём', 'четырнадцати'),
  ('пяти', 'пятнадцати'),
  ('шести', 'шестнадцати'),
  ('семи', 'семнадцати'),
  ('восьми', 'восемнадцати'),
  ('девяти', 'девятнадцати')
)
t_ca = (
  (
    (
      (
        'нолём',
        ('тысячей', 'тысячами'),
        ('миллионом', 'миллионами'),
        ('миллиардом', 'миллиардами'),
        ('триллионом', 'триллионами'),
        ('квадриллионом', 'квадриллионами'),
        ('квинтиллионом', 'квинтиллионами'),
        ('секстиллионом', 'секстиллионами'),
        ('септиллионом', 'септиллионами'),
        ('октиллионом', 'октиллионами')
      ),
      'ста',
      'двумя стами',
      'тремя стами',
      'четырьмя стами',
      'пятистами',
      'шестистами',
      'семистами',
      'восьмистами',
      'девятистами'
    ),
    'десятью',
    'двадцатью',
    'тридцатью',
    'сорока',
    'пятьюдесятью',
    'шестьюдесятью',
    'семьюдесятью',
    'восемьюдесятью', 
    'девяноста'
  ),
  ('одним', 'одиннадцатью'),
  ('двумя', 'двенадцатью'),
  ('тремя', 'тринадцатью'),
  ('четырьмя', 'четырнадцатью'),
  ('пятью', 'пятнадцатью'),
  ('шестью', 'шестнадцатью'),
  ('семью', 'семнадцатью'),
  ('восемью', 'восемнадцатью'),
  ('девятью', 'девятнадцатью')
)
v_ca = (
  (
    (
      (
        'ноль',
        ('тысячу', 'тысяч'),
        ('миллион', 'миллионов'),
        ('миллиард', 'миллиардов'),
        ('триллион', 'триллионов'),
        ('квадриллион', 'квадриллионов'),
        ('квинтиллион', 'квинтиллионов'),
        ('секстиллион', 'секстиллионов'),
        ('септиллион', 'септиллионов'),
        ('октиллион', 'октиллионов')
      ),
      'сто',
      'двести',
      'триста',
      'четыреста',
      'пятьсот',
      'шестьсот',
      'семьсот',
      'восемьсот',
      'девятьсот'
    ),
    'десять',
    'двадцать',
    'тридцать',
    'сорок',
    'пятьдесят',
    'шестьдесят',
    'семьдесят',
    'восемьдесят', 
    'девяносто'
  ),
  ('один', 'одиннадцать'),
  ('два', 'двенадцать'),
  ('три', 'тринадцать'),
  ('четыре', 'четырнадцать'),
  ('пять', 'пятнадцать'),
  ('шесть', 'шестнадцать'),
  ('семь', 'семнадцать'),
  ('восемь', 'восемнадцать'),
  ('девять', 'девятнадцать')
)
p_ca = (
  (
    (
      (
        'ноле',
        ('тысяче', 'тысячах'),
        ('миллионе', 'миллионах'),
        ('миллиарде', 'миллиардах'),
        ('триллионе', 'триллионах'),
        ('квадриллионе', 'квадриллионах'),
        ('квинтиллионе', 'квинтиллионах'),
        ('секстиллионе', 'секстиллионах'),
        ('септиллионе', 'септиллионах'),
        ('октиллионе', 'октиллионах')
      ),
      'ста',
      'двухстах',
      'трехстах',
      'четырёхстах',
      'пятистах',
      'шестистах',
      'семистах',
      'восьмистах',
      'девятистах'
    ),
    'десяти',
    'двадцати',
    'тридцати',
    'сорока',
    'пятидесяти',
    'шестидесяти',
    'семидесяти',
    'восьмидесяти', 
    'девяноста'
  ),
  ('одном', 'одиннадцати'),
  ('двух', 'двенадцати'),
  ('трёх', 'тринадцати'),
  ('четырёх', 'четырнадцати'),
  ('пяти', 'пятнадцати'),
  ('шести', 'шестнадцатью'),
  ('семи', 'семнадцати'),
  ('восьми', 'восемнадцати'),
  ('девяти', 'девятнадцати')
)

i_mu = (
  (
    (
      (
        'нулевой',
        'тысячный',
        'двухтысячный',
        'трёхтысячный',
        'четырёхтысячный',
        'пятитысячный',
        'шеститысячный',
        'семитысячный',
        'восьмитысячный',
        'девятитысячный'
      ),
      'сотый',
      'двухсотый',
      'трёхсотый',
      'четырёхсотый',
      'пятисотый',
      'шестисотый',
      'семисотый',
      'восьмисотый',
      'девятисотый'
    ),
    'десятый',
    'двадцатый',
    'тридцатый',
    'сороковой',
    'пятидесятый',
    'шестидесятый',
    'семидесятый',
    'восьмидесятый', 
    'девяностый'
  ),
  ('первый', 'одиннадцатый'),
  ('второй', 'двенадцатый'),
  ('третий', 'тринадцатый'),
  ('четвёртый', 'четырнадцатый'),
  ('пятый', 'пятнадцатый'),
  ('шестой', 'шестнадцатый'),
  ('седьмой', 'семнадцатый'),
  ('восьмой', 'восемнадцатый'),
  ('девятый', 'девятнадцатый')
)
i_sr = (
  (
    (
      (
        'нулевое',
        'тысячное',
        'двухтысячное',
        'трёхтысячное',
        'четырёхтысячное',
        'пятитысячное',
        'шеститысячное',
        'семитысячное',
        'восьмитысячное',
        'девятитысячное'
      ),
      'сотое',
      'двухсотое',
      'трёхсотое',
      'четырёхсотое',
      'пятисотое',
      'шестисотое',
      'семисотое',
      'восьмисотое',
      'девятисотое'
    ),
    'десятое',
    'двадцатое',
    'тридцатое',
    'сороковой',
    'пятидесятое',
    'шестидесятое',
    'семидесятое',
    'восьмидесятое', 
    'девяностое'
  ),
  ('первое', 'одиннадцатое'),
  ('второе', 'двенадцатое'),
  ('третье', 'тринадцатое'),
  ('четвёртое', 'четырнадцатое'),
  ('пятое', 'пятнадцатое'),
  ('шестое', 'шестнадцатое'),
  ('седьмое', 'семнадцатое'),
  ('восьмое', 'восемнадцатое'),
  ('девятое', 'девятнадцатое')
)
i_zh = (
  (
    (
      (
        'нулевая',
        'тысячная',
        'двухтысячная',
        'трёхтысячная',
        'четырёхтысячная',
        'пятитысячная',
        'шеститысячная',
        'семитысячная',
        'восьмитысячная',
        'девятитысячная'
      ),
      'сотая',
      'двухсотая',
      'трёхсотая',
      'четырёхсотая',
      'пятисотая',
      'шестисотая',
      'семисотая',
      'восьмисотая',
      'девятисотая'
    ),
    'десятая',
    'двадцатая',
    'тридцатая',
    'сороковой',
    'пятидесятая',
    'шестидесятая',
    'семидесятая',
    'восьмидесятая', 
    'девяностая'
  ),
  ('первая', 'одиннадцатая'),
  ('вторая', 'двенадцатая'),
  ('третья', 'тринадцатая'),
  ('четвёртая', 'четырнадцатая'),
  ('пятая', 'пятнадцатая'),
  ('шестая', 'шестнадцатая'),
  ('седьмая', 'семнадцатая'),
  ('восьмая', 'восемнадцатая'),
  ('девятая', 'девятнадцатая')
)
i_mn = (
  (
    (
      (
        'нулевые',
        'тысячные',
        'двухтысячные',
        'трёхтысячные',
        'четырёхтысячные',
        'пятитысячные',
        'шеститысячные',
        'семитысячные',
        'восьмитысячные',
        'девятитысячные'
      ),
      'сотые',
      'двухсотые',
      'трёхсотые',
      'четырёхсотые',
      'пятисотые',
      'шестисотые',
      'семисотые',
      'восьмисотые',
      'девятисотые'
    ),
    'десятые',
    'двадцатые',
    'тридцатые',
    'сороковые',
    'пятидесятые',
    'шестидесятые',
    'семидесятые',
    'восьмидесятые',
    'девяностые'
  ),
  ('первые', 'одиннадцатые'),
  ('вторые', 'двенадцатые'),
  ('третьи', 'тринадцатые'),
  ('сороковые', 'четырнадцатые'),
  ('пятые', 'пятнадцатые'),
  ('шестые', 'шестнадцатые'),
  ('седьмые', 'семнадцатые'),
  ('восьмые', 'восемнадцатые'),
  ('девятые' 'девятнадцатые')
)
r_mu = (
  (
    (
      (
        'нулевого',
        'тысячного',
        'двухтысячного',
        'трёхтысячного',
        'четырёхтысячного',
        'пятитысячного',
        'шеститысячного',
        'семитысячного',
        'восьмитысячного',
        'девятитысячного'
      ),
      'сотого',
      'двухсотого',
      'трёхсотого',
      'четырёхсотого',
      'пятисотого',
      'шестисотого',
      'семисотого',
      'восьмисотого',
      'девятисотого'
    ),
    'десятого',
    'двадцатого',
    'тридцатого',
    'сорокового',
    'пятидесятого',
    'шестидесятого',
    'семидесятого',
    'восьмидесятого', 
    'девяностого'
  ),
  ('первого', 'одиннадцатого'),
  ('второго', 'двенадцатого'),
  ('третьего', 'тринадцатого'),
  ('четвёртого', 'четырнадцатого'),
  ('пятого', 'пятнадцатого'),
  ('шестого', 'шестнадцатого'),
  ('седьмого', 'семнадцатого'),
  ('восьмого', 'восемнадцатого'),
  ('девятого', 'девятнадцатого')
)
r_zh = (
  (
    (
      (
      'нулевой',
      'тысячной',
      'двухтысячной',
      'трёхтысячной',
      'четырёхтысячной',
      'пятитысячной',
      'шеститысячной',
      'семитысячной',
      'восьмитысячной',
      'девятитысячной'
      ),
      'сотой',
      'двухсотой',
      'трёхсотой',
      'четырёхсотой',
      'пятисотой',
      'шестисотой',
      'семисотой',
      'восьмисотой',
      'девятисотой'
    ),
    'десятой',
    'двадцатой',
    'тридцатой',
    'сороковой',
    'пятидесятой',
    'шестидесятой',
    'семидесятой',
    'восьмидесятой', 
    'девяностой'
  ),
  ('первой', 'одиннадцатой'),
  ('второй', 'двенадцатой'),
  ('третью', 'тринадцатой'),
  ('четвёртой', 'четырнадцатой'),
  ('пятой', 'пятнадцатой'),
  ('шестой', 'шестнадцатой'),
  ('седьмой', 'семнадцатой'),
  ('восьмой', 'восемнадцатой'),
  ('девятой', 'девятнадцатой')
)
r_mn = (
  (
    (
      (
        'нулевых',
        'тысячных',
        'двухтысячных',
        'трёхтысячных',
        'четырёхтысячных',
        'пятитысячных',
        'шеститысячных',
        'семитысячных',
        'восьмитысячных',
        'девятитысячных'
      ),
      'сотых',
      'двухсотых',
      'трёхсотых',
      'четырёхсотых',
      'пятисотых',
      'шестисотых',
      'семисотых',
      'восьмисотых',
      'девятисотых'
    ),
    'десятых',
    'двадцатых',
    'тридцатых',
    'сороковых',
    'пятидесятых',
    'шестидесятых',
    'семидесятых',
    'восьмидесятых',
    'девяностых'
  ),
  ('первых', 'одиннадцатых'),
  ('вторых', 'двенадцатых'),
  ('третьих', 'тринадцатых'),
  ('сороковых', 'четырнадцатых'),
  ('пятых', 'пятнадцатых'),
  ('шестых', 'шестнадцатых'),
  ('седьмых', 'семнадцатых'),
  ('восьмых', 'восемнадцатых'),
  ('девятых' 'девятнадцатых')
)
d_mu = (
  (
    (
      (
        'нулевому',
        'тысячному',
        'двухтысячному',
        'трёхтысячному',
        'четырёхтысячному',
        'пятитысячному',
        'шеститысячному',
        'семитысячному',
        'восьмитысячному',
        'девятитысячному'
      ),
      'сотому',
      'двухсотому',
      'трёхсотому',
      'четырёхсотому',
      'пятисотому',
      'шестисотому',
      'семисотому',
      'восьмисотому',
      'девятисотому'
    ),
    'десятому',
    'двадцатому',
    'тридцатому',
    'сороковому',
    'пятидесятому',
    'шестидесятому',
    'семидесятому',
    'восьмидесятому', 
    'девяностому'
  ),
  ('первому', 'одиннадцатому'),
  ('второму', 'двенадцатому'),
  ('третьему', 'тринадцатому'),
  ('четвёртому', 'четырнадцатому'),
  ('пятому', 'пятнадцатому'),
  ('шестому', 'шестнадцатому'),
  ('седьмому', 'семнадцатому'),
  ('восьмому', 'восемнадцатому'),
  ('девятому', 'девятнадцатому')
)
t_mu = (
  (
    (
      (
        'нулевым',
        'тысячным',
        'двухтысячным',
        'трёхтысячным',
        'четырёхтысячным',
        'пятитысячным',
        'шеститысячным',
        'семитысячным',
        'восьмитысячным',
        'девятитысячным'
      ),
      'сотым',
      'двухсотым',
      'трёхсотым',
      'четырёхсотым',
      'пятисотым',
      'шестисотым',
      'семисотым',
      'восьмисотым',
      'девятисотым'
    ),
    'десятым',
    'двадцатым',
    'тридцатым',
    'сороковым',
    'пятидесятым',
    'шестидесятым',
    'семидесятым',
    'восьмидесятым', 
    'девяностым'
  ),
  ('первым', 'одиннадцатым'),
  ('вторым', 'двенадцатым'),
  ('третьим', 'тринадцатым'),
  ('четвёртым', 'четырнадцатым'),
  ('пятым', 'пятнадцатым'),
  ('шестым', 'шестнадцатым'),
  ('седьмым', 'семнадцатым'),
  ('восьмым', 'восемнадцатым'),
  ('девятым', 'девятнадцатым')
)
t_mn = (
  (
    (
      (
        'нулевыми',
        'тысячными',
        'двухтысячными',
        'трёхтысячными',
        'четырёхтысячными',
        'пятитысячными',
        'шеститысячными',
        'семитысячными',
        'восьмитысячными',
        'девятитысячными'
      ),
      'сотыми',
      'двухсотыми',
      'трёхсотыми',
      'четырёхсотыми',
      'пятисотыми',
      'шестисотыми',
      'семисотыми',
      'восьмисотыми',
      'девятисотыми'
    ),
    'десятыми',
    'двадцатыми',
    'тридцатыми',
    'сороковыми',
    'пятидесятыми',
    'шестидесятыми',
    'семидесятыми',
    'восьмидесятыми',
    'девяностыми'
  ),
  ('первыми', 'одиннадцатым'),
  ('вторыми', 'двенадцатым'),
  ('третьими', 'тринадцатым'),
  ('сороковыми', 'четырнадцатым'),
  ('пятыми', 'пятнадцатым'),
  ('шестыми', 'шестнадцатым'),
  ('седьмым', 'семнадцатым'),
  ('восьмыми', 'восемнадцатым'),
  ('девятыми' 'девятнадцатым')
)
v_zh = (
  (
    (
      (
        'нулевую',
        'тысячную',
        'двухтысячную',
        'трёхтысячную',
        'четырёхтысячную',
        'пятитысячную',
        'шеститысячную',
        'семитысячную',
        'восьмитысячную',
        'девятитысячную'
      ),
      'сотую',
      'двухсотую',
      'трёхсотую',
      'четырёхсотую',
      'пятисотую',
      'шестисотую',
      'семисотую',
      'восьмисотую',
      'девятисотую'
    ),
    'десятую',
    'двадцатую',
    'тридцатую',
    'сороковую',
    'пятидесятую',
    'шестидесятую',
    'семидесятую',
    'восьмидесятую', 
    'девяностую'
  ),
  ('первую', 'одиннадцатую'),
  ('вторую', 'двенадцатую'),
  ('третью', 'тринадцатую'),
  ('четвёртую', 'четырнадцатую'),
  ('пятую', 'пятнадцатую'),
  ('шестую', 'шестнадцатую'),
  ('седьмую', 'семнадцатую'),
  ('восьмую', 'восемнадцатую'),
  ('девятую', 'девятнадцатую')
)
p_mu = (
  (
    (
      (
        'нулевом',
        'тысячном',
        'двухтысячном',
        'трёхтысячном',
        'четырёхтысячном',
        'пятитысячном',
        'шеститысячном',
        'семитысячном',
        'восьмитысячном',
        'девятитысячном'
      ),
      'сотом',
      'двухсотом',
      'трёхсотом',
      'четырёхсотом',
      'пятисотом',
      'шестисотом',
      'семисотом',
      'восьмисотом',
      'девятисотом'
    ),
    'десятом',
    'двадцатом',
    'тридцатом',
    'сороковом',
    'пятидесятом',
    'шестидесятом',
    'семидесятом',
    'восьмидесятом', 
    'девяностом'
  ),
  ('первом', 'одиннадцатом'),
  ('втором', 'двенадцатом'),
  ('третьем', 'тринадцатом'),
  ('четвёртом', 'четырнадцатом'),
  ('пятом', 'пятнадцатом'),
  ('шестом', 'шестнадцатом'),
  ('седьмом', 'семнадцатом'),
  ('восьмом', 'восемнадцатом'),
  ('девятом', 'девятнадцатом')
)

# Сопоставление остальных форм
r_sr = r_mu
d_sr = d_mu
d_zh = r_zh
d_mn = t_mu
t_sr = t_mu
t_zh = r_zh
p_sr = p_mu
p_zh = r_zh
p_mn = r_mn

# Определение падежа по окончанию
mn_pd = {'е': i_mn, 'м': d_mn, 'х': r_mn, 'ми': t_mn}
mu_pd = {'': i_mu, 'а': r_mu, 'у': d_mu, 'ом': t_mu, 'е': p_mu, 'й': i_mu, 'я': r_mu, 'ю': d_mu, 'ем': t_mu, 'и': p_mu}
zh_pd = {'а': i_zh, 'ы': r_zh, 'е': d_zh, 'ой': t_zh, 'у': v_zh}

# Обозначения едииниц измерения
units = r"(%|°|'|℃|£|₽|\$|(к|м)г\b|(|мк|к|с|м)м\b|(|к|с|м)м²|(|к|с|м)м³|т\b|(|к|М|Г)Вт\b|сек\b|л\.с\.|шт\.)"

# Формы единиц измерения и числительных
# Единственное число/форма для чисел, оканчивающихся на 2,3,4/множественное число/форма для дробей
forms = {
  '%': ('процент', 'процента', 'процентов', 'процента'),
  '°': ('градус', 'градуса', 'градусов', 'градуса'),
  '℃': ('градус Цельсия', 'градуса Цельсия', 'градусов Цельсия', 'градуса Цельсия'),
  '$': ('доллар', 'доллара', 'долларов', 'доллара'),
  'кг': ('килограмм', 'килограмма', 'килограммов', 'килограмма'),
  'км': ('километр', 'километра', 'километров', 'километра'),
  'мг': ('миллиграмм', 'миллиграмма', 'миллиграммов', 'миллиграмма'),
  'мм': ('миллиметр', 'миллиметра', 'миллиметров', 'миллиметра'),
  'см': ('сантиметр', 'сантиметра', 'сантиметров', 'сантиметра'),
  'м': ('метр', 'метра', 'метров', 'метра'),
  'мкм': ('микрометр', 'микрометра', 'микрометров', 'микрометра'),
  'т': ('тонна', 'тонны', 'тонн', 'тонны'),
  'кВт': ('киловатт', 'киловатта', 'киловатт', 'киловатта'),
  'МВт': ('мегаватт', 'мегаватта', 'мегаватт', 'мегаватта'),
  'ГВт': ('гигаватт', 'гигаватта', 'гигаватт', 'гигаватта'),
  'Вт': ('ватт', 'ватта', 'ватт', 'ватта'),
  '₽': ('рубль', 'рубля', 'рублей', 'рубля'),
  '£': ('фунт стерлингов', 'фунта стерлингов', 'фунтов стерлингов', 'фунта стерлингов'),
  'л.с.': ('лошадиная сила', 'лошадиные силы', 'лошадиных сил', 'лошадиной силы'),
  'м²': ('квадратный метр', 'квадратных метра', 'квадратных метров', 'квадратного метра'),
  'мм²': ('квадратный миллиметр', 'квадратных миллиметра', 'квадратных миллиметров', 'квадратного миллиметра'),
  'см²': ('квадратный сантиметр', 'квадратных сантиметра', 'квадратных сантиметров', 'квадратного сантиметра'),
  'км²': ('квадратный километр', 'квадратных километра', 'квадратных километров', 'квадратного километра'),
  'м³': ('кубический метр', 'кубических метра', 'кубических метров', 'кубического метра'),
  'мм³': ('кубический миллиметр', 'кубических миллиметра', 'кубических миллиметров', 'кубического миллиметра'),
  'см³': ('кубический сантиметр', 'кубических сантиметра', 'кубических сантиметров', 'кубического сантиметра'),
  'км³': ('кубический километр', 'кубических километра', 'кубических километров', 'кубического километра'),
  'сек': ('секунда', 'секунды', 'секунд', 'секунды'),
  "'": ('минута', 'минуты', 'минут', 'минуты'),
  'шт.': ('штука', 'штуки', 'штук', 'штуки')
}

mu_v = r'(человек(а|)|дру(га|зей)|ребенка|детей|товарищ(а|ей)|бог(а|ов)|старик(а|ов)|мальчик(а|ов)|солдат(а|)|хозя(ина|ев)|начальник(а|ов)|пар(ня|ей)|мужчин(у|)|капитан(а|ов)|генерал(а|ов)|муж(а|ей)|немц(а|ев)|дяд(ю|ь)|писател(я|ей)|гост(я|ей)|врач(а|ев)|командир(а|ов)|профессор(а|ов)|господ(ина|)|дух(а|ов)|директор(а|ов)|мужик(а|ов)|автор(а|ов)|доктор(а|ов)|лейтенант(а|ов)|дед(а|ов)|родител(я|ей)|президент(а|ов)|поэт(а|ов)|офицер(а|ов)|сосед(а|ей)|дурак(а|ов)|корол(я|ей)|полковник(а|ов)|учител(я|ей)|пап(а|)|граждан(ин|)|художник(а|ов)|майор(а|ов)|инженер(а|ов)|кон(я|ей)|бойц(а|ов)|председател(я|ей)|еврей|министр(а|ов)|мастер(а|ов)|мальчишк(у|ек)|читател(я|ей)|сотрудник(а|ов)|цар(я|ей)|звер(я|ей)|секретар(я|ей)|противник(а|ов)|представител(я|ей)|артист(а|ов)|актер(а|ов)|кот(а|ов)|бык(а|ов)|волк(а|ов)|приятел(я|ей)|дедуш(ку|ек)|шофер(а|ов)|чиновник(а|ов)|водител(я|ей)|работник(а|ов)|специалист(а|ов)|старшин(а|)|ученик(а|ов)|родственник(а|ов)|руководител(я|ей)|инспектор(а|ов)|милиционер(а|ов)|русск(ого|их)|журналист(а|ов)|следовател(я|ей)|сержант(а|ов)|пастух(а|ов)|вожд(я|ей)|медвед(я|ей)|коллег(у|)|молодц(а|[ео]в)|юнош(у|ей)|крестьян(ина|)|пассажир(а|ов)|разведчик(а|ов)|помощник(а|ов)|свидетел(я|ей)|больн(ого|ых)|император(а|ов)|участник(а|ов)|судья|депутат(а|ов)|преступник(а|ов)|жук(а|ов)|шеф(а|ов)|гени(я|ев)|бандит(а|ов)|москвич(а|ей)|зайц(а|ев)|сэр(а|ов)|княз(я|ей)|воин(а|ов)|стрелк(а|ов)|вор(а|ов)|внук(а|ов)|льв(а|ов)|редактор(а|ов)|режиссер(а|ов)|клиент(а|ов)|рыбак(а|ов)|заместител(я|ей)|ангел(а|ов)|козл(а|ов)|идиот(а|ов)|летчик(а|ов)|государ(я|ей)|моряк(а|ов)|кандидат(а|ов)|малыш(а|ей)|убийц(у|)|прокурор(а|ов)|принц(а|ев)|лидер(а|ов)|иностранц(а|ев)|поп(а|ов)|#спутник(а|ов)|владельц(а|ев)|агент(а|ов)|супруг(а|ов)|комиссар(а|ов)|кролик(а|ов)|политик(а|ов)|старичк(а|ов)|музыкант(а|ов)|трус(а|ов)|охотник(а|ов)|рыцар(я|ей)|академик(а|ов)|собеседник(а|ов)|зрител(я|ей)|военн(ого|ых)|воробь(я|ев)|комбат(а|ов)|турист(а|ов)|олен(я|ей)|бригадир(а|ов)|жених(а|ов)|#проводник(а|ов)|волшебник(а|ов)|колдун(а|ов)|посетител(я|ей)|кузнец(а|ов)|корреспондент(а|ов)|предк(а|ов)|штурман(а|ов)|монах(а|ов)|подростк(а|ов)|дружк(а|ов)|гад(а|ов)|курсант(а|ов)|бар(ина|)|петух(а|ов)|любител(я|ей)|чеченц(а|ев)|адвокат(а|ов)|боцман(а|ов)|пришельц(а|ев)|гном(а|ов)|подполковник(а|ов)|фашист(а|ов)|техник(а|ов)|охранник(а|ов)|барон(а|ов)|комендант(а|ов)|большевик(а|ов)|сталкер(а|ов)|англичан(ина|)|маг(а|ов)|китаец(а|ев)|сынк(а|ов)|маршал(а|ов)|интеллигент(а|ов)|советник(а|ов)|хоббит(а|ов)|раб(а|ов)|шпион(а|ов)|партизан(а|)|незнакомц(а|ев)|младенц(а|ев)|преподавател(я|ей)|пациент(а|ов)|гус(я|ей)|инвалид(а|ов)|боевик(а|ов)|француз(а|ов)|официант(а|ов)|мэр(а|ов)|школьник(а|ов)|осл(а|ов)|баран(а|ов)|пионер(а|ов)|кот(енка|ят)|философ(а|ов)|пацан(а|ов)|партнер(а|ов)|продавц(а|ов)|казак(а|ов)|покойник(а|ов)|священник(а|ов)|обитател(я|ей)|разбойник(а|ов)|танцор(а|ов)|батюшк(у|ек)|пилот(а|ов)|рабоч(его|их)|покупател(я|ей)|комар(а|ов)|всадник(а|ов)|историк(а|ов)|повар(а|ов)|негодяй|негр(а|ов)|дровосек(а|ов)|голубк(а|ов)|переводчик(а|ов)|японц(а|ев)|профессионал(а|ов)|человечк(а|ов)|красавц(а|ев)|правител(я|ей)|чудак(а|ов)|пареньк(а|ов)|удав(а|ов)|хирург(а|ов)|санитар(а|ов)|грек(а|ов)|потомок(а|ов)|предател(я|ей)|купц(а|ов)|демократ(а|ов)|солдатик(а|ов)|землян(ина|)|старост(у|)|щенк(а|ов)|тигр(а|ов)|игрок(а|ов)|новичк(а|ов)|парнишк(у|ек)|премьер(а|ов)|торговц(а|ев)|строител(я|ей)|знаком(ого|ых)|слушател(я|ей))\b'

ms_d = '|человеку|году|разу|дню|месту|часу|случаю|ряду|вопросу|окну|сыну|месяцу|небу|шагу|углу|веку|карману|камню|гостю|закону|действию|ходу|номеру|средству|профессору|господину|плану|залу|директору|результату|следу|условию|процессу|числу|удару|телефону|коридору|автору|кабинету|документу|самолету|рассказу|врагу|доктору|лейтенанту|счету|решению|роману|институту|бою|магазину|президенту|событию|листу|офицеру|уровню|креслу|опыту|правилу|десятоку|желанию|ящику|этажу|соседу|совету|стулу|поезду|полю|типу|суду|королю|примеру|факту|лагерю|кораблю|острову|гражданину|району|выражению|мешку|управлению|приказу|знаку|заводу|курсу|чуду|зданию|сроку|очку|предмету|танку|ключу|вагону|бойцу|обстоятельству|периоду|отделу|способу|принципу|направлению|замку|читателю|сотруднику|секретарю|противнику|продукту|представителю|автобусу|автомобилю|отряду|занятию|артисту|явлению|актеру|участку|звонку|тексту|приятелю|изменению|варианту|столику|уроку|списку|стволу|выводу|отделению|выстрелу|признаку|слою|убийству|режиму|преступлению|полку|посту|появлению|помещению|подъезду|пункту|поколению|взрыву|проекту|домику|отличию|орудию|объекту|поселку|элементу|повороту|столбу|корпусу|складу|полету|пожару|симптому|свидетелю|сообщению|исключению|сигналу|снаряду|этапу|изображению|кадру|сиденью|браку|свиданию|походу|свойству|фактору|отказу|сосуду|рисуноку|съезду|акту|сюжету|цеху|переулку|эксперименту|исполнению|конверту|люку|визиту|термину|кризису|ремонту|прыжку|заказу|свидетельству|проспекту|маршруту|аресту|трамваю|советнику|преимуществу|приходу|перерыву|столетию|эпизоду|тому|диску|пребыванию|отражению|котлу|обвинению|приглашению|побегу|разряду|десятилетию|утверждению|конкурсу|предположению|известию|барьеру|прогнозу|провалу|округу|валу|сорту|обломоку|символу|разводу|сектору|светилу|сочетанию|соединению|матчу|'

ms_p = '|человеке|году|годе|разу|разе|дне|месте|часу|случае|ряду|вопросе|окне|сыне|месяце|небе|шагу|углу|веке|кармане|камне|госте|законе|действии|ходу|номере|средстве|профессоре|господине|плане|зале|директоре|результате|следе|условии|процессе|числе|ударе|телефоне|коридоре|авторе|кабинете|документе|самолете|рассказе|враге|докторе|лейтенанте|счете|решении|романе|институте|бою|магазине|президенте|событии|листе|офицере|уровне|кресле|опыте|правиле|десятоке|желании|ящике|этаже|соседе|совете|стуле|поезде|поле|типе|суде|короле|примере|факте|лагере|корабле|острове|гражданине|районе|выражении|мешке|управлении|приказе|знаке|заводе|курсе|чуде|здании|сроке|очке|предмете|танке|ключе|вагоне|бойце|обстоятельстве|периоде|отделе|способе|принципе|направлении|замке|читателе|сотруднике|секретаре|противнике|продукте|представителе|автобусе|автомобиле|отряде|занятии|артисте|явлении|актере|участке|звонке|тексте|приятеле|изменении|варианте|столике|уроке|списке|стволе|выводе|отделении|выстреле|признаке|слое|убийстве|режиме|преступлении|полку|посту|появлении|помещении|подъезде|пункте|поколении|взрыве|проекте|домике|отличии|орудии|объекте|поселке|элементе|повороте|столбе|корпусе|складе|полете|пожаре|симптоме|свидетеле|сообщении|исключении|сигнале|снаряде|этапе|изображении|кадре|сиденье|браке|свидании|походе|свойстве|факторе|отказе|сосуде|рисуноке|съезде|акте|сюжете|цехе|переулке|эксперименте|исполнении|конверте|люке|визите|термине|кризисе|ремонте|прыжке|заказе|свидетельстве|проспекте|маршруте|аресте|трамвае|советнике|преимуществе|приходе|перерыве|столетии|эпизоде|томе|диске|пребывании|отражении|котле|обвинении|приглашении|побеге|разряде|десятилетии|утверждении|конкурсе|предположении|известии|барьере|прогнозе|провале|округе|валу|сорте|обломоке|символе|разводе|секторе|светиле|сочетании|соединении|матче|'

zh_i = r'(жизн[иь]|двер[иь]|работ[аы]|сил[аы]|женщин[аы]|ноч[иь]|войн[аы]|минут[аы]|жен[аы]|стран[аы]|дорог[аи]|комнат[аы]|част[иь]|книг[аи]|улиц[аы]|душ[аи]|мысл[иь]|стен[аы]|мам[аы]|спин[аы]|смерт[иь]|девушк[аи]|власт[иь]|систем[аы]|квартир[аы]|люб(ов|ви)|школ[аы]|недел(и|ь)|семь[ия]|групп[аы]|газет[аы]|собак[аи]|форм[аы]|арми[ия]|рот[аы]|гор[аы]|рек[аи]|мер[аы]|вещ[иь]|причин[аы]|черт[аы]|девочк[аи]|глав[аы]|парти[ия]|проблем[аы]|пар[аы]|деревн[ия]|цел[иь]|бутылк[аи]|картин[аы]|встреч[аи]|игр[аы]|трубк[аи]|кухн[ия]|компани[ия]|иде[ия]|болезн[иь]|рол[иь]|точк[аи]|звезд[аы]|фамили[ия]|секунд[аы]|доч(ь|ери)|революци[ия]|сестр[аы]|ситуаци[ия]|границ[аы]|тен[иь]|лошад[иь]|площад[иь]|радост[иь]|карт[аы]|цен[аы]|област[иь]|крыш[аи]|дам[аы]|рыб[аы]|бабушк[аи]|птиц[аы]|зим[аы]|кроват[иь]|лестниц[аы]|стать[ия]|станци[ия]|команд[аы]|операци[ия]|тем[аы]|волн[аы]|задач[аи]|старух[аы]|т[её]т[ия]|пауз[аы]|сотн[ия]|степен[иь]|фигур[аы]|культур[аы]|труб[аы]|масс[аы]|лини[ия]|лодк[аи]|весн[аы]|фотографи[ия]|сцен[аы]|бед[аы]|фирм[аы]|организаци[ия]|ошибк[аи]|камер[аы]|побед[аы]|фраз[аы]|кост[иь]|личност[иь]|столиц[аы]|попытк[аи]|шутк[аи]|страниц[аы]|скорост[иь]|сигарет[аы]|пул[ия]|книжк[аи]|больниц[аы]|тюрьм[аы]|кошк[аи]|планет[аы]|палатк[аи]|доск[аи]|постел[иь]|сумк[аи]|жертв[аы]|территори[ия]|тайн[аы]|песн[ия]|осен[иь]|поверхност[иь]|церк(овь|ви)|ручк[аи]|хозяйк[аи]|опасност[иь]|способност[иь]|мух[аи]|зон[аы]|капл[ия]|сред[аы]|площадк[аи]|охот[аы]|бров[иь]|клетк[аи]|обстановк[аи]|штук[аи]|основ[аы]|дач[аи]|тревог[аи]|куртк[аи]|изб[аы]|вершин[аы]|рубашк[аи]|стенк[аи]|лун[аы]|гостиниц[аы]|бесед[аы]|лап[аы]|шапк[аи]|бабк[аи]|должност[иь]|истин[аы]|позици[ия]|морд[аы]|записк[аи]|могил[аы]|букв[аы]|реакци[ия]|пил[аы]|обезьян[аы]|бригад[аы]|краск[аи]|разниц[аы]|куч[аи]|полос[аы]|повест[иь]|теори[ия]|ткан[иь]|баз[аы]|шинел[иь]|комисси[ия]|палк[аи]|колонн[аы]|надпис[иь]|тарелк[аи]|подруг[аи]|сущност[иь]|батаре[ия]|девиц[аы]|мечт[аы]|дочк[аи]|королев[аы]|картошк[аи]|девчонк[аи]|просьб[аы]|сказк[аи]|бород[аы]|пачк[аи]|привычк[аи]|сумм[аы]|поездк[аи]|шляп[аы]|кабин[аы]|запис[иь]|подробност[иь]|ракет[аы]|смен[аы]|эпох[аи]|ветк[аи]|скал[аы]|обид[аы]|особенност[иь]|печк[аи]|печат[иь]|ран[аы]|коробк[аи]|цифр[аы]|коров[аы]|бумажк[аи]|професси[ия]|разведк[аи]|ям[аы]|цеп[иь]|ламп[аы]|дол[ия]|старушк[аи]|потер[ия]|дверц[аы]|норм[аы]|ложк[аи]|зарплат[аы]|веревк[аи]|бан[ия]|библиотек[аи]|сет[иь]|функци[ия]|башн[ия]|структур[аы]|сфер[аы]|угроз[аы]|подушк[аи]|т[её]тк[аи]|дивизи[ия]|детал[иь]|новост[иь]|передач[аи]|редакци[ия]|свадьб[аы]|лаборатори[ия]|бомб[аы]|карточк[аи]|девк[аи]|винтовк[аи]|щел[иь]|туч[аи]|марк[аи]|папк[аи]|услуг[аи]|мин[аы]|модел[иь]|лекци[ия]|печ[иь]|ре[ч]?к[аи]|республик[аи]|невест[аы]|виз[аы]|обязанност[иь]|койк[аи]|рукопис[иь]|дур[аы]|экспедици[ия]|спичк[аи]|лопат[аы]|кнопк[аи]|дорожк[аи]|свинь[ия]|роз[аы]|шкур[аы]|контор[аы]|палат[аы]|лент[аы]|рубах[аи]|оболочк[аи]|пустын[ия]|молни[ия]|атмосфер[аы]|оценк[аи]|остановк[аи]|копейк[аи]|верси[ия]|ножк[аи]|цивилизаци[ия]|драк[аи]|тряпк[аи]|мышц[аы]|наци[ия]|зависимост[иь]|импери[ия]|величин[аы]|крышк[аи]|стрел[аы]|лавк[аи]|ступеньк[аи]|поз[аы]|сосн[аы]|перемен[аы]|акци[ия]|суббот[аы]|гимнастерк[аи]|папирос[аы]|рюмк[аи]|свеч[аи]|решетк[аи]|строк[аи]|справк[аи]|рамк[аи]|долин[аы]|чашк[аи]|легенд[аы]|жидкост[иь]|мышк[аи]|пещер[аы]|майк[аи]|схем[аы]|четверт[иь]|учительниц[аы]|подпис[иь]|зме[ия]|картинк[аи]|соседк[аи]|ветв[иь]|стойк[аи]|плит[аы]|спальн[ия]|лампочк[аи]|туфл[ия]|пуговиц[аы]|благодарност[иь]|пьес[аы]|примет[аы]|игрушк[аи]|спинк[аи]|проверк[аи]|ведьм[аы]|палуб[аы]|почт[аы]|академи[ия]|физиономи[ия]|стру[ия]|т[её]щ[аи]|процедур[аы]|луж[аи]|юбк[аи]|маск[аи]|атак[аи]|реформ[аы]|установк[аи]|кист[иь]|телеграмм[аы]|дыр[аы]|машинк[аи]|прогулк[аи]|натур[аы]|фуражк[аи]|командировк[аи]|вен[аы]|палочк[аи]|катастроф[аы]|трагеди[ия]|реклам[аы]|калитк[аи]|шуб[аы]|выставк[аи]|кишк[аи]|цепочк[аи]|монет[аы]|перчатк[аи]|дат[аы]|кают[аы]|категори[ия]|фабрик[аи]|преми[ия]|казарм[аы]|ставк[аи]|манер[аы]|паст[иь]|медал[иь]|биографи[ия]|тетрад[иь]|ванн[аы]|жалоб[аы]|наград[аы]|печен[иь]|характеристик[аи]|повязк[аи]|крепост[иь]|трудност[иь]|инструкци[ия]|вселенн(ая|ые)|твар[иь]|лыж[аи]|гитар[аы]|вспышк[аи]|администраци[ия]|петл[ия]|простын[ия]|витрин[аы]|ресниц[аы]|технологи[ия]|загадк[аи]|хат[аы]|елк[аи]|травм[аы]|покупк[аи]|специальност[иь]|скамь[ия]|сери[ия]|копи[ия]|тропинк[аи]|рам[аы]|бур[ия]|ягод[аы]|оград[аы]|тонн[аы]|мыш[иь]|ступен[иь]|трасс[аы]|смес[иь]|гранат[аы]|формул[аы]|эмоци[ия]|тройк[аи]|пород[аы]|корзин[аы]|конференци[ия]|доз[аы]|пленк[аи]|неудач[аи]|таблетк[аи]|фигурк[аи]|берез[аы]|секретарш[аи]|пропаст[иь]|полоск[аи]|телег[аи]|кастрюл[ия]|дырк[аи]|матушк[аи]|коз[аы]|касс[аы]|скатерт[иь]|кампани[ия]|крыс[аы]|съемк[аи]|икон[аы]|местност[иь]|медсестр[аы]|мелоди[ия]|гран[иь]|куриц[аы]|посадк[аи]|нитк[аи]|банд[аы]|инфекци[ия]|ста[ия]|усадьб[аы]|транше[ия]|табуретк[аи]|пробк[аи]|провинци[ия]|порци[ия]|почк[аи]|конфет[аы]|сетк[аи]|зар[ия]|матк[аи]|минутк[аи]|мат(ь|ери)|пластинк[аи]|заслуг[аи]|будк[аи]|молитв[аы]|кличк[аи]|веранд[аы]|битв[аы]|публикаци[ия]|язв[аы]|груш[аи]|гроз[аы]|шахт[аы]|инициатив[аы]|единиц[аы]|ссылк[аи]|рощ[аи]|троп[аы]|казн[иь]|группировк[аи]|заметк[аи]|принцесс[аы]|валют[аы]|складк[аи]|трещин[аы]|алле[ия]|полян[аы]|актрис[аы]|кукл[аы]|конструкци[ия]|концепци[ия]|бабочк[аи]|студи[ия]|скрипк[аи]|песенк[аи]|редкост[иь]|премьер[аы]|зажигалк[аи]|претензи[ия]|стоянк[аи]|стади[ия]|верхушк[аи]|национальност[иь]|платформ[аы]|верст[аы]|подружк[аи]|гусениц[аы]|отставк[аи]|рыбк[аи]|сопк[аи]|тумбочк[аи]|стрекоз[аы]|тысяч[аи]|(|морск(ая|ие) )мил[ия]|лошадин(ая сила|ые силы))\b'

zh_r = '|жизни|двери|работы|силы|женщины|ночи|войны|минуты|жены|страны|дороги|комнаты|части|книги|улицы|души|мысли|стены|мамы|спины|смерти|девушки|власти|системы|квартиры|любви|школы|недели|семьи|группы|газеты|собаки|формы|армии|роты|горы|реки|меры|вещи|причины|черты|девочки|главы|партии|проблемы|пары|деревни|цели|бутылки|картины|встречи|игры|трубки|кухни|компании|идеи|болезни|роли|точки|звезды|фамилии|секунды|дочери|революции|сестры|ситуации|границы|тени|лошади|площади|радости|карты|цены|области|крыши|дамы|рыбы|бабушки|птицы|зимы|кровати|лестницы|статьи|станции|команды|операции|темы|волны|задачи|старухы|тети|паузы|сотни|степени|фигуры|культуры|трубы|массы|линии|лодки|весны|фотографии|сцены|беды|фирмы|организации|ошибки|камеры|победы|фразы|кости|личности|столицы|попытки|шутки|страницы|скорости|сигареты|пули|книжки|больницы|тюрьмы|кошки|планеты|палатки|доски|постели|сумки|жертвы|территории|тайны|песни|осени|поверхности|церкви|ручки|хозяйки|опасности|способности|мухи|зоны|капли|среды|площадки|охоты|брови|клетки|штуки|основы|дачи|тревоги|куртки|избы|вершины|рубашки|стенки|луны|гостиницы|беседы|лапы|шапки|бабки|должности|истины|позиции|морды|записки|могилы|буквы|реакции|пилы|обезьяны|бригады|краски|разницы|кучи|полосы|повести|теории|ткани|базы|шинели|комиссии|палки|колонны|надписи|тарелки|подруги|сущности|батареи|девицы|мечты|дочки|королевы|картошки|девчонки|просьбы|сказки|бороды|пачки|привычки|суммы|поездки|шляпы|кабины|записи|подробности|ракеты|смены|эпохи|ветки|скалы|обиды|особенности|печки|печати|раны|коробки|цифры|коровы|бумажки|профессии|разведки|ямы|цепи|лампы|доли|старушки|потери|дверцы|нормы|ложки|зарплаты|веревки|бани|библиотеки|сети|функции|башни|структуры|сферы|угрозы|подушки|тетки|дивизии|детали|новости|передачи|редакции|свадьбы|лаборатории|бомбы|карточки|девки|винтовки|щели|тучи|марки|папки|услуги|мины|модели|лекции|печи|ре[ч]?ки|республики|невесты|визы|обязанности|койки|рукописи|дуры|экспедиции|спички|лопаты|кнопки|дорожки|свиньи|розы|шкуры|конторы|палаты|ленты|рубахи|оболочки|пустыни|молнии|атмосферы|оценки|остановки|копейки|версии|ножки|цивилизации|драки|тряпки|мышцы|нации|зависимости|империи|величины|крышки|стрелы|лавки|ступеньки|позы|сосны|перемены|акции|субботы|гимнастерки|папиросы|рюмки|свечи|решетки|строки|справки|рамки|долины|чашки|легенды|жидкости|мышки|пещеры|майки|схемы|четверти|учительницы|подписи|змеи|картинки|соседки|ветви|стойки|плиты|спальни|лампочки|туфли|пуговицы|благодарности|пьесы|приметы|игрушки|спинки|проверки|ведьмы|палубы|почты|академии|физиономии|струи|тещи|процедуры|лужи|юбки|маски|атаки|реформы|установки|кисти|телеграммы|дыры|машинки|прогулки|натуры|фуражки|командировки|вены|палочки|катастрофы|трагедии|рекламы|калитки|шубы|выставки|кишки|цепочки|монеты|перчатки|даты|каюты|категории|фабрики|премии|казармы|ставки|манеры|пасти|медали|биографии|тетради|ванны|жалобы|награды|характеристики|повязки|крепости|трудности|инструкции|вселенной|твари|лыжи|гитары|вспышки|администрации|петли|простыни|витрины|ресницы|технологии|загадки|хаты|елки|травмы|покупки|специальности|скамьи|серии|копии|тропинки|рамы|бури|ягоды|ограды|тонны|мыши|ступени|трассы|смеси|гранаты|формулы|эмоции|тройки|породы|корзины|конференции|дозы|пленки|неудачи|таблетки|фигурки|березы|секретарши|пропасти|полоски|телеги|кастрюли|дырки|матушки|козы|кассы|скатерти|кампании|крысы|съемки|иконы|местности|медсестры|мелодии|грани|курицы|посадки|нитки|банды|инфекции|стаи|усадьбы|траншеи|табуретки|пробки|провинции|порции|почки|конфеты|сетки|зари|зорь|матки|минутки|матери|пластинки|заслуги|будки|молитвы|клички|веранды|битвы|публикации|язвы|груши|грозы|шахты|инициативы|единицы|ссылки|рощи|тропы|казни|группировки|заметки|принцессы|валюты|складки|трещины|аллеи|поляны|актрисы|куклы|конструкции|концепции|бабочки|студии|скрипки|песенки|редкости|премьеры|зажигалки|претензии|стоянки|стадии|верхушки|национальности|платформы|версты|подружки|гусеницы|отставки|рыбки|сопки|тумбочки|стрекозы|тысячи|мили|'

zh_v = r'(работу|силу|женщин(у|)|войну|минуту|жен(у|)|страну|мат(ь|ерей)|комнату|улицу|стену|мам(у|)|спину|систему|квартиру|группу|газету|меру|жизнь|дверь|ночь|часть|мысль|дорогу|книгу|душу|смерть|девуш(ку|ек)|власть|любовь|школу|неделю|семью|собак(у|)|форму|армию|роту|гору|реку|вещь|причину|черту|девоч(ку|ек)|главу|партию|проблему|пару|деревню|цель|бутылку|картину|встречу|игру|трубку|кухню|компанию|идею|болезнь|роль|точку|звезду|фамилию|секунду|доч(ь|ерей)|революцию|сест(ру|ер)|ситуацию|границу|тень|лошад(ь|ей)|площадь|радость|карту|цену|область|крышу|дам(у|)|рыб(у|)|бабуш(ку|ек)|птиц(у|)|зиму|кровать|лестницу|статью|станцию|команду|операцию|тему|волну|задачу|старух(у|)|т[её]т(ю|ь)|паузу|сотню|степень|фигуру|культуру|трубу|массу|линию|лодку|весну|фотографию|сцену|беду|фирму|организацию|ошибку|камеру|победу|фразу|кость|личность|столицу|попытку|шутку|страницу|скорость|сигарету|пулю|книжку|больницу|тюрьму|кош(ку|ек)|планету|палатку|доску|постель|сумку|жертву|территорию|тайну|песню|осень|поверхность|церк(овь|ви)|ручку|хозя(йку|ек)|опасность|способность|мух(у|)|зону|каплю|среду|площадку|охоту|бровь|клетку|обстановку|штуку|основу|дачу|тревогу|куртку|избу|вершину|рубашку|стенку|луну|гостиницу|беседу|лапу|шапку|баб(ку|ок)|должность|истину|позицию|морду|записку|могилу|букву|реакцию|пилу|обезьян(у|)|бригаду|краску|разницу|кучу|полосу|повесть|теорию|ткань|базу|шинель|комиссию|палку|колонну|надпись|тарелку|подруг(у|)|сущность|батарею|девиц(у|)|мечту|доч(ку|ек)|королев(у|)|девчон(ку|ок)|просьбу|сказку|бороду|пачку|привычку|сумму|поездку|шляпу|кабину|запись|подробность|ракету|смену|эпоху|ветку|скалу|обиду|особенность|печку|печать|рану|коробку|цифру|коров(у|)|бумажку|профессию|разведку|яму|цепь|лампу|долю|старуш(ку|ек)|потерю|дверцу|норму|ложку|зарплату|веревку|баню|библиотеку|сет|функцию|башню|структуру|сферу|угрозу|подушку|т[её]т(ку|ок)|дивизию|деталь|новость|передачу|редакцию|свадьбу|лабораторию|бомбу|карточку|дев(ку|ок)|винтовку|щель|тучу|марку|папку|услугу|мину|модель|лекцию|печь|речку|республику|невест(у|)|визу|обязанность|койку|рукопись|дур(у|)|экспедицию|спичку|лопату|кнопку|дорожку|свинью|розу|шкуру|контору|палату|ленту|рубаху|оболочку|пустыню|молнию|атмосферу|оценку|остановку|копейку|версию|ножку|цивилизацию|драку|тряпку|мышцу|нацию|зависимость|империю|величину|крышку|стрелу|лавку|ступеньку|позу|сосну|перемену|акцию|субботу|гимнастерку|папиросу|рюмку|свечу|решетку|строку|справку|рамку|долину|чашку|легенду|жидкость|мыш(ку|ек)|пещеру|майку|схему|четверть|учительниц(у|)|подпись|змею|картинку|сосед(ку|ок)|ветвь|стойку|плиту|спальню|лампочку|туфлю|пуговицу|благодарность|пьесу|примету|игрушку|спинку|проверку|ведьм(у|)|палубу|почту|академию|физиономию|струю|тему|процедуру|лужу|юбку|маску|атаку|реформу|установку|кисть|телеграмму|дыру|машинку|прогулку|натуру|фуражку|командировку|вену|палочку|катастрофу|трагедию|рекламу|калитку|шубу|выставку|кишку|цепочку|монету|перчатку|дату|каюту|категорию|фабрику|премию|казарму|ставку|манеру|пасть|медаль|биографию|тетрадь|ванну|жалобу|награду|печень|характеристику|повязку|крепость|трудность|инструкцию|вселенной|твар|лыжу|гитару|вспышку|администрацию|петлю|простыню|витрину|ресницу|технологию|загадку|хату|[её]лку|травму|покупку|специальность|скамью|серию|копию|тропинку|раму|бурю|ягоду|ограду|тонну|мыш(ь|ей)|ступень|трассу|смесь|гранату|формулу|эмоцию|тройку|породу|корзину|конференцию|дозу|пленку|неудачу|таблетку|фигурку|бер[её]зу|секретарш(у|)|пропасть|полоску|телегу|кастрюлю|дырку|матуш(ку|ек)|коз(у|)|кассу|скатерт|кампанию|крыс(у|)|съемку|икону|местность|медсест(ру|ер)|мелодию|грань|куриц(у|)|посадку|нитку|банду|инфекцию|стаю|усадьбу|траншею|табуретку|пробку|провинцию|порцию|почку|конфету|сетку|зарю|матку|минутку|пластинку|заслугу|будку|молитву|кличку|веранду|битву|публикацию|язву|грушу|грозу|шахту|инициативу|единицу|ссылку|рожу|тропу|казнь|группировку|заметку|принцесс(у|)|валюту|складку|трещину|аллею|поляну|актрис(у|)|куклу|конструкцию|концепцию|бабоч(ку|ек)|студию|скрипку|песенку|редкость|премьеру|зажигалку|претензию|стоянку|стадию|верхушку|национальность|платформу|версту|подруж(ку|ек)|отставку|рыб(ку|ок)|сопку|тумбочку|стрекоз(у|)|милю)\b'

zh_dp = '|работе|силе|женщине|войне|минуте|жене|стране|комнате|улице|стене|маме|спине|системе|квартире|группе|газете|мере|жизни|двери|ночи|части|мысли|дороге|книге|душе|смерти|девушке|власти|любви|школе|неделе|семье|собаке|форме|армии|роте|горе|реке|вещи|причине|черте|девочке|главе|партии|проблеме|паре|деревне|цели|бутылке|картине|встрече|игре|трубке|кухне|компании|идее|болезни|роли|точке|звезде|фамилии|секунде|дочери|революции|сестре|ситуации|границе|тени|лошади|площади|радости|карте|цене|области|крыше|даме|рыбе|бабушке|птице|зиме|кровати|лестнице|статье|станции|команде|операции|теме|волне|задаче|старухе|тете|паузе|сотне|степеини|фигуре|культуре|трубе|массе|линии|лодке|весне|фотографии|сцене|беде|фирме|организации|ошибке|камере|победе|фразе|кости|личности|столице|попытке|шутке|странице|скорости|сигарете|пуле|книжке|больнице|тюрьме|кошке|планете|палатке|доске|постели|сумке|жертве|территории|тайне|песне|осени|поверхности|церкви|ручке|хозяйке|опасности|способности|мухе|зоне|капле|среде|площадке|охоте|брови|клетке|обстановке|штуке|основе|даче|тревоге|куртке|избе|вершине|рубашке|стенке|луне|гостинице|беседе|лапе|шапке|бабке|должности|истине|позиции|морде|записке|могиле|букве|реакции|пиле|обезьяне|бригаде|краске|разнице|куче|полосе|повести|теории|ткани|базе|шинели|комиссии|палке|колонне|надпис|тарелке|подруге|сущности|батарее|девице|мечте|дочке|королеве|девчонке|просьбе|сказке|бороде|пачке|привычке|сумме|поездке|шляпе|кабине|записи|подробности|ракете|смене|эпохе|ветке|скале|обиде|особенности|печке|печати|ране|коробке|цифре|корове|бумажке|профессии|разведке|яме|цепи|лампе|доле|старушке|потере|дверце|норме|ложке|зарплате|веревке|бане|библиотеке|сети|функции|башне|структуре|сфере|угрозе|подушке|тетке|дивизии|детали|новости|передаче|редакции|свадьбе|лаборатории|бомбе|карточке|девке|винтовке|щели|туче|марке|папке|услуге|мине|модели|лекции|печи|речке|республике|невесте|визе|обязанности|койке|рукописи|дуре|экспедиции|спичке|лопате|кнопке|дорожке|свинье|розе|шкуре|конторе|палате|ленте|рубахе|оболочке|пустыне|молнии|атмосфере|оценке|остановке|копейке|версии|ножке|цивилизации|драке|тряпке|мышце|нации|зависимости|империи|величине|крышке|стреле|лавке|ступеньке|позе|сосне|перемене|акции|субботе|гимнастерке|папиросе|рюмке|свече|решетке|строке|справке|рамке|долине|чашке|легенде|жидкости|мышке|пещере|майке|схеме|четверти|учительнице|подписи|змее|картинке|соседке|ветви|стойке|плите|спальне|лампочке|туфле|пуговице|благодарности|пьесе|примете|игрушке|спинке|проверке|ведьме|палубе|почте|академии|физиономии|струе|теще|процедуре|луже|юбке|маске|атаке|реформе|установке|прихожей|кисти|телеграмме|дыре|машинке|прогулке|натуре|фуражке|командировке|вене|палочке|катастрофе|трагедии|рекламе|калитке|шубе|выставке|кишке|цепочке|монете|перчатке|дате|каюте|категории|фабрике|премии|казарме|ставке|манере|пасти|медали|биографии|тетрад|ванне|жалобе|награде|печени|характеристике|повязке|крепости|трудности|инструкции|вселенной|твар|лыже|гитаре|вспышке|администрации|петле|простыне|витрине|реснице|технологии|загадке|хате|елке|травме|покупке|специальности|скамье|серии|копии|тропинке|раме|буре|ягоде|ограде|тонне|мыши|ступени|трассе|смеси|гранате|формуле|эмоции|тройке|породе|корзине|конференции|дозе|пленке|неудаче|таблетке|фигурке|березе|секретарше|пропасти|полоске|телеге|кастрюле|дырке|матушке|козе|кассе|скатерти|кампании|крысе|съемке|иконе|местности|медсестре|мелодии|грани|курице|посадке|нитке|банде|инфекции|стае|усадьбе|траншее|табуретке|пробке|провинции|порции|почке|конфете|сетке|заре|матке|минутке|пластинке|заслуге|будке|молитве|кличке|веранде|битве|публикации|язве|груше|грозе|шахте|инициативе|единице|ссылке|роще|тропе|казни|группировке|заметке|принцессе|валюте|складке|трещине|аллее|поляне|актрисе|кукле|конструкции|концепции|бабочке|студии|скрипке|песенке|редкости|премьере|зажигалке|претензии|стоянке|стадии|верхушке|национальности|платформе|версте|подружке|гусенице|отставке|рыбке|сопке|тумбочке|стрекозе|миле|'

sr_iv = '|дело|слово|место|лицо|начало|окно|плечо|имя|тело|право|сердце|небо|письмо|отношение|солнце|чувство|движение|дерево|общество|состояние|море|действие|государство|средство|положение|условие|число|колено|решение|течение|качество|событие|кресло|правило|желание|лето|поле|удовольствие|правительство|название|зеркало|мнение|заболевание|выражение|управление|лечение|чудо|здание|войско|очко|обстоятельство|значение|дно|направление|существо|производство|занятие|явление|мгновение|воспоминание|понятие|крыло|нарушение|платье|представление|изменение|множество|озеро|пятно|колесо|предложение|основание|предприятие|отделение|убийство|хозяйство|руководство|преступление|появление|облако|помещение|исследование|расстояние|поколение|вещество|крыльцо|вождь|необходимость|голод|девица|мечта|кольцо|создание|отличие|орудие|собрание|сравнение|заявление|поражение|одеяло|пальто|ведро|устройство|открытие|произведение|сообщение|шоссе|исключение|лекарство|кладбище|задание|перо|яблоко|путешествие|знакомство|следствие|яйцо|звание|строительство|объяснение|наблюдение|болото|разрешение|возвращение|изображение|бревно|назначение|последствие|требование|применение|распоряжение|училище|сиденье|проявление|такси|заседание|свидание|министерство|заключение|судно|доказательство|воздействие|блюдо|свойство|приключение|получение|повышение|воскресенье|указание|окончание|наказание|выступление|издание|окошко|несчастье|окружение|общежитие|общение|издательство|сопротивление|сочинение|нападение|сено|учреждение|падение|исполнение|полотенце|определение|интервью|совещание|наступление|стадо|обращение|испытание|свидетельство|продолжение|описание|происшествие|показание|растение|преимущество|стихотворение|умение|замечание|заведение|бедро|мероприятие|столетие|весло|племя|снижение|пребывание|противоречие|соответствие|отражение|обвинение|приглашение|седло|посольство|объявление|десятилетие|гнездо|отверстие|утверждение|брюхо|семя|предположение|осложнение|прозвище|местечко|обещание|торжество|семейство|царство|расследование|светило|сочетание|обсуждение|постановление|самоубийство|кровотечение|измерение|соединение|строение|копье|полотно|поручение|'

# Шаблоны
presamples = (
  (r' ?\+ ?', ' плюс '),
  (r'(?<!\w)-(?=\d)', 'минус '),
  (r'\u00A0|\u2009', ' '),
  (r' {2,}', ' '),
  (r' +(\n|\Z)', r'\1'),
  (r'\n{2,}', r'\n'),
  (r'[‑–−—]', '-'),

  ('л\. с\.', 'л.с.'),
  (r' ?\& ?', ' and '),

  (r'(?<=\d) (?=\d{3}[^-])', ''),
  (r'(\d+,)((\d{3})+) (\d{1,2}\b)', r'\1\2\4'),

  ('L-образн', 'эль-образн'),
  ('V-образн', 'вэ-образн'),
  ('X-образн', 'икс-образн'),
  (r'\bID\b', 'ай-ди'),
  (r'I( [a-zA-Z][a-z]+)', r'i\1'),

  (r'(?<!\d )\bсм\.', 'смотри'),
  (r' им\. ((|(|[А-Я]\.)[А-Я]\. ?)[А-Я][а-я]+)', r' имени \1'),

  (r'\b(в|вв|г|гг|д|п|с|э|долл|руб|кв|обл|тыс|ш|шт|чел)(\. [А-Я][ а-я]+)', r'\1.\2'),

  (r"(°|')(\d{1,2})", r'\1 \2'),
  (r'''('\d{1,2})"''', r'\1сек'),
  (r' ?с\. ?ш\.', ' северной широты'),
  (r' ?ю\. ?ш\.', ' южной широты'),
  (r' ?в\. ?д\.', ' восточной долготы'),
  (r' ?з\. ?д\.', ' западной долготы'),

  (r'([03-9]) ?чел\.', r'\1 человек'),
  (r'\b(\d*[02-9]2|2) ?чел\.', r'\1 человека'),
  (r'(?<=\d) ?USD\b', '$ США'),
  (r'\bдолл\.', '$'),
  (r'\bруб\.', '₽'),
  (r'(млн|млрд|трлн)\. ' + units, r'\1\2'), # По правилам без точки
  (r'(\$|€|£|₽) ?([0-9,-]+)', r'\2\1'),
  (r'(\$|€|£|₽) ?(тыс\.|млн|млрд|трлн|тысяч(|а|и)\b|(миллион|миллиард|триллион)(|а|ов)\b)', r' \2 \1'),
  (' ?€', ' евро',),
  (r'кв\. ?((|к|с|м)м)\b', r'\1²'),
  (r'куб\. ?((|к|с|м)м)\b', r'\1³'),

  (r'(\d+,\d+) ?тыс\.', r'\1 тысячи'),
  (r'(\d+,\d+) ?млн', r'\1 миллиона'),
  (r'(\d+,\d+) ?млрд', r'\1 миллиарда'),
  (r'(\d+,\d+) ?трлн', r'\1 триллиона'),
  (r'(?<=\d) ?тыс\.', '000'),
  (r'(?<=\d) ?млн', '000000'),
  (r'(?<=\d) ?млрд', '000000000'),
  (r'(?<=\d) ?трлн', '000000000000'),
  (r'([IV]{1,3} кв)\.', r'\1артал'),
  (r'\bкв\.( \d+)', r'квартира\1'),
  (r'\bд\.( \d+)', r'дом\1'),
  (r'\bул\.', 'улица'),
  (r'\bпр(-т|осп\.)', 'проспект'),
  (r'\b(?<!и )пр\.', 'проспект'),
  (r'([А-Я][а-я]+(ая|ую) обл)\.', r'\1асть'),
  (r'([А-Я][а-я]+ой обл)\.', r'\1асти'),

  (r'[«»"]', ''),
  (r'(?<=\d) ' + units,  r'\1')
)
samples = (
  (r'\b([Вв] )№№ ?', r'\1номерах '),
  (r'\b([Вв] )№( ?\d+)', r'\1 номере \2'),
  ('№№ ?', 'номера '),
  ('№ ?', 'номер '),
  (r'ВКП\(б\)', 'вэкапэ-бэ'),
  ('все-таки', 'всё-таки'),

  (r'P\.S\.', 'Постскриптум.'),
  (r'\b[Тт]\. ?е\.', 'то есть'),
  (r' т\. ?д\.', ' так далее'),
  (r' т\. ?п\.', ' тому подобное'),
  (r' т\. ?к\.', ' так как'),
  (r'в т\. ?ч\.', 'в том числе'),
  (r' н\. ?э\.', ' нашей эры'),
  (r' с\. ?г\.', ' сего года'),
  (r'\b[Пп]рим\. ред\.', 'примечание редактора'),
  (r'\b[Пп]рим\. пер\.', 'примечание переводчика'),
  (r'\b[Рр]ед\.', 'редактор'),
  (r'\b[Пп]рим\.', 'примечание'),
  ('точки над i', 'точки над и-'),

  (r'\b([Гг])-(н|на|не|ном|ну)\b', r'\1осподи\2'),
  (r'\b([Гг])-(жа|же|жи|жой|жу)\b', r'\1оспо\2'),
  (r'\bр-н(|а|е|ом|у)\b', r'район\1'),

  (r' ?± ?', ' плюс-минус '),
  (r' ?= ?', ' равно '),
  (r' ?≈ ?', ' приближённо равно '),

  (r'\b[Вв]/ч\b', 'вэ-че'),
  (r'/(сек|с)\b', ' в секунду'),
  (r'/(час|ч)\b', ' в час'),

#  (r'(\d)(½|¼|¾|⅕|⅖|⅗|⅘|⅙|⅚|⅐|⅛|⅜|⅝|⅞|⅑)', r'\1 и \2'),
#  ('½', 'одна вторая'),
#  ('⅓', 'одна треть'),
#  ('⅔', 'две трети'),
#  ('¼', 'одна четверть'),
#  ('¾', 'три четверти'),
#  ('⅕', 'одна пятая'),
#  ('⅖', 'две пятых'),
#  ('⅗', 'три пятых'),
#  ('⅘', 'четыре пятых'),
#  ('⅙', 'одна шестая'),
#  ('⅚', 'пять шестых'),
#  ('⅐', 'одна седьмая'),
#  ('⅛', 'одна восьмая'),
#  ('⅜', 'три восьмых'),
#  ('⅝', 'пять восьмых'),
#  ('⅞', 'семь восьмых'),
#  ('⅑', 'одна девятая'),

#  (r'(\d+)([⁻]?[⁰¹²³⁴⁵⁶⁸⁹]+)', r'\1 в степени \2'),
#  (r'(\d+|ых|ая) ?[·×xXхХ*] ?(10 в степени)', r'\1 на \2'),
#  ('⁰', '0'),
#  ('¹', '1'),
#  ('²', '2'),
#  ('³', '3'),
#  ('⁴', '4'),
#  ('⁵', '5'),
#  ('⁶', '6'),
#  ('⁷', '7'),
#  ('⁸', '8'),
#  ('⁹', '9'),
#  ('⁻', 'минус '),
  (r'\b(\d+) ?х ?(\d+)\b', r'\1 на \2'),

  (r'(\d) - (\d)', r'\1-\2'),
  (r'(?<=\d)(г\.|гг\.)', r' \1'),

  (r'(январ[еюьям]{1,2}|феврал[еюьям]{1,2}|март[аеуом]{0,2}|апрел[еюьям]{1,2}|ма[йюяем]{1,2}|июн[еюьям]{1,2}|июл[еюьям]{1,2}|август[аеуом]{0,2}|сентябр[еюьям]{1,2}|октябр[еюьям]{1,2}|ноябр[еюьям]{1,2}|декабр[еюьям]{1,2}|начал[аеому]{1,2}|середин[аеойуы]{1,2}|кон[ецауом]{2,3}|половин[аеуыой]{1,2}|лет[ауом]{1,2}|весн[аеуыой]{1,2}|осен[иью]{1,2})( \d+) (года\b|г\.)', r'\1\2-го года'),

  (r'([а-я]{3,8} )(\d+) ?- ?([а-я]{3,8} )(\d+-го)', r'\1\2-го \3\4'),

  (r'([Пп]еред \d+) (января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)', r'\1-м \2'),

  (r'\b([Зз]а|[Нн]а)( \d+)-(\d+) (января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)', r'\1\2-е \3-е \4'),
  (r'\b([Зз]а|[Нн]а|[Пп]о)( \d+) (января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)', r'\1\2-е \3'),
  (r'\b([Дд]о|[Пп]осле|[Сс]о?)( \d+) (января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)', r'\1\2-го \3'),
  (r'\b([Кк]о?)( \d+) (января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)', r'\1\2-му \3'),
  (r'(\d+) (января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря)', r'\1-го \2'),

  (r'(начал[аеому]{1,2}|середин[аеойуы]{1,2}|кон[ецауом]{2,3}|половин[аеуыой]{1,2})( \d+) гг\.', r'\1\2-х годов'),

  (r'(ноч[иь] со? \d+)( на \d+)', r'\1-го\2'),
  (r'\b([Сс]о? \d+)( по \d+-е)', r'\1-го\2'),

  (r'(\d+) годов', r'\1-го годов'),
  (r'\b([Кк] \d+)-(\d+) (годам|гг\.)', r'\1-му \2-му годам'),
  (r'(\d+-м )(гг\.)', r'\1годам'),

  (r'\b(\d+)-(\d+) (века\b|вв\.)', r'\1-й \2-й века'),
  (r'\b(\d+) века\b', r'\1-го века'), # Спорный шаблон
  (r'\b([Вв] \d+) (веке|в\.)', r'\1-м веке'),
  (r'\b([Кк] \d+)(-му) (веку|в\.)', r'\1-му веку'),
  (r'\b([Дд]о|[Пп]осле|[Сс])( \d+) (века|в\.)', r'\1\2-го века'),
  (r'\b([Вв] \d+)(-| и )(\d+) (веках|вв\.)', r'\1-м\2\3-м веках'),
  (r'\b([Кк] \d+)-(\d+) векам', r'\1-му \2-му векам'),
  (r'(начал[аемоу]{1,2}|кон[аемоуц]{2,3}|середин[аейоуы]{1,2}|половин[аейоуы]{1,2}) (\d+) в\.', r'\1 \2-го века'),
  (r'\b(\d+) (век\b|в\.)', r'\1-й век'),

  (r'\b([Вв] ([а-я]+м |)\d+) (году|г\.)', r'\1-м году'),
  (r'\b([Кк] ([а-я]+му |)\d+) (году|г\.)', r'\1-му году'),
  (r'\b([Кк] \d+0) гг\.', r'\1-м годам'),

  (r'([Пп]о сравнению с|[Пп]еред)( \d+) г\.', r'\1\2-м годом'),
  (r'(\d+) годом', r'\1-м годом'),
  (r'\b([Дд]о|[Пп]осле|[Сс])( \d+) (года|г\.)', r'\1\2-го года'),

  (r'\b([Вв] \d+)(-| и (|в ))(\d+) (годах|гг\.)', r'\1-м\2\4-м годах'),
  (r'(\d+)-(\d+) (годы|гг\.)', r'\1-й \2-й годы'),
  (r'(\d+) (или|и) (\d+) (годы|гг\.)', r'\1-й \2 \3-й годы'),

  (r'\b([Вв] \d+0)(|-х) (годах|гг\.)', r'\1-х годах'),
  (r'\b([Дд]о|[Пп]осле|[Сс])( \d+) (годов|гг\.)', r'\1\2-х годов'),
  (r'\b([Сс] \d+) по (\d+) (год[ы]?|г[г]?\.)', r'\1-го по \2-й \3'),

  (r'([Зз]им[аеойуы]{1,2} \d+)-(\d+)', r'\1-го \2-го'),

  (r'(\d)( квартал)\b', r'\1-й\2'),
  (r'(\d)( квартала)\b', r'\1-го\2'),
  (r'(\d)( кварталу)\b', r'\1-му\2'),
  (r'(\d)( квартал)(е|ом)\b', r'\1-м\2\3'),

  (r'\b([Дд]о|[Кк]о?|[Пп]осле|[Сс]о?)( \d+)( недел)(е|ей|и)\b', r'\1\2-й\3\4'),

  (r'(\d+-го )г\.', r'\1года'),
  (r'([Сс] \d+-м )г\.', r'\1годом'),
  (r'(\d+0-е )гг\.', r'\1годы'),
  (r'(\d+0-ми )гг\.', r'\1годами'),
  (r'(\d+0-х )гг\.', r'\1годов'),

  (r'(\d+) г\.р\.', r'\1-го года рождения'),

  (r'\b(\d+)( и |-)(\d+)-(го|ми|х)\b', r'\1-\4\2\3-\4'),

  (r'(1\d|[02-9][05-9]|\b[5-9]) года\b', r'\1-го года'),
  (r'([12]\d{3}) года\b', r'\1-го года'),
  (r'(1\d|[02-9][02-9]|\b[2-9]) год\b', r'\1-й год'),
  (r'(\d+)(|-й) ?г\.', r'\1-й год'),

  (r'(\d+)-(\d+) ((тысяче|сто)летия|поколения)\b', r'\1-е-\2-е \3'),
  (r'\b([Сс]о?)( \d+)( по \d+) ((тысяче|сто)летие|поколение)\b', r'\1\2-го\3-е \4'),
  (r'\b([Вв]о?)( \d+)-(\d+) ((тысяче|сто)летиях|поколениях)', r'\1\2-м \3-м \4'),
  (r'(\d+) ((тысяче|сто)летие|поколение)\b', r'\1-е \2'),
  (r'(\d+) ((тысяче|сто)летия|поколения)\b', r'\1-го \2'),
  (r'(\d+) ((тысяче|сто)летию|поколению)', r'\1-му \2'),
  (r'(\d+) ((тысяче|сто)летии|поколении)', r'\1-м \2'),
  (r'(\d+) ((тысяче|сто)летием|поколением)', r'\1-м \2'),

  (r'(\d)( ранга)\b', r'\1-го\2'),

  (r'(\w)(\n|\Z)', r'\1.\2')
)
postsamples = (
  (r'(одного )((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)\b', r'\1\2а'),
  (r'(одному )((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)\b', r'\1\2у'),
  (r'(одним )((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)\b', r'\1\2ом'),
  (r'(одном )((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)\b', r'\1\2е'),

  (r'(двух|трёх|четырёх) ((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)а\b', r'\1 \2ов'),
  (r'(двум|трём|четырём) ((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)а\b', r'\1 \2ам'),
  (r'(двумя|тремя|четырьмя) ((|кило|милли|санти)метр|градус|(|кило|милли)грамм|процент)а\b', r'\1 \2ами'),

  (r'одного (секуд|тонн)а', r'одной \1ы'),
  (r'одного штука', r'одной штуке'),
  (r'одном[у] (секуд|тонн|штук)а', r'одной \1е'),
  (r'одним (секуд|тонн|штук)а', r'одной \1ой')
)

def cardinal(num, casus):
    rem = len(num) % 3
    if rem != 0: num = '0' * (3 - rem) + num
    c_num = ''
    triple = len(num) // 3
    for t in range(triple):
        number = num[:3]
        num = num[3:]

        t_num = ''
        if number[2] != '0':
            if number[1] == '1':
                t_num = casus[int(number[2])][1]
            else:
                t_num = casus[int(number[2])][0]
                if number[1] != '0':
                    t_num = casus[0][int(number[1])] + ' ' + t_num
            if number[0] != '0':
                t_num = casus[0][0][int(number[0])] + ' ' + t_num
        else:
            if number[1] != '0':
                t_num = casus[0][int(number[1])]
            if number[0] != '0':
                if t_num == '':
                    t_num = casus[0][0][int(number[0])]
                else:
                    t_num = casus[0][0][int(number[0])] + ' ' + t_num

        if c_num != '' and t_num != '':
             c_num += ' ' + t_num
        else:
             c_num += t_num
        if t_num != '' and len(num) != 0:
            if number[2] != '1':
                n = 1
            else:
                n = 0
            c_num = c_num + ' ' + casus[0][0][0][triple - t - 1][n]

    c_num = sub(r'одно(го|му) тысячи', 'одной тысячи', c_num)
    c_num = sub('один тысячу', 'одну тысячу', c_num)
    if c_num == '': c_num = casus[0][0][0][0]
    return c_num

def ordinal(num, casus):
    if num[-1] == '0':
        try:
            if num[-2] == '0':
                if num[-3] == '0':
                    prenum = ''
                    number = casus[0][0][0][int(num[-4])]
                else:
                    if len(num) == 3:
                        prenum = ''
                    else:
                        prenum = num[:-3]
                        if int(prenum) != 0: prenum += '000_'
                    number = casus[0][0][int(num[-3])]
            else:
                if len(num) == 2:
                    prenum = ''
                else:
                    prenum = num[:-2]
                    if int(prenum) != 0: prenum += '00_'
                number = casus[0][int(num[-2])]
        except:
            prenum = ''
            number = casus[0][0][0][0]
    else:
        if len(num) == 1:
            prenum = ''
            dec = 0
        else:
            if num[-2] == '1':
                dec = 1
                if len(num) == 2:
                    prenum = ''
                else:
                    prenum = num[:-2]
                    if int(prenum) != 0: prenum += '00_'
            else:
                prenum = num[:-1]
                if int(prenum) != 0: prenum += '0_'
                dec = 0
        number = casus[int(num[-1])][dec]
    return prenum + number

# Код заимствован (с изменениями) у Jeff Wheeler
values = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
def roman2arabic(value):
    total = 0
    prevValue = 0
    value = value[::-1]
    for char in value:
        if values[char] >= prevValue:
            total += values[char]
        else:
            total -= values[char]
        prevValue = values[char]
    total = str(total)
    return total

def substant(num, key):
    if len(num) > 1 and num[-2] == '1':
        form = forms[key][2]
    else:
        if num[-1] == '1':
            form = forms[key][0]
        elif 1 < int(num[-1]) < 5:
            form = forms[key][1]
        else:
            form = forms[key][2]
    return form

def feminin(num):
    if len(num) > 1:
        if num[-2] != '1':
            pre = num[:-1]
            if int(pre) != 0:
                pre = num[:-1] + '0'
            if num[-1] == '1':
                num = pre + '_одна'
            elif num[-1] == '2':
                num = pre + '_две'
    else:
        if num == '1':
            num = 'одна'
        elif num == '2':
            num = 'две'
    return num

# =================================
# Основная функция обработки текста
# =================================

def txt_prep(text):

    for sample in presamples:
        text = sub(sample[0], sample[1], text)

    for m in finditer(r'(\d+,\d+)' + units, text):
        text = text.replace(m.group(), m.group(1) + ' ' + forms[m.group(2)][3], 1)
    for m in finditer(r'(\d+)' + units, text):
        text = text.replace(m.group(), m.group(1) + ' ' + substant(m.group(1), m.group(2)), 1)
    for m in finditer(r'(тысячи|миллиона|миллиарда|триллиона) ?' + units, text):
        text = text.replace(m.group(), m.group(1) + ' ' + forms[m.group(2)][2], 1)

    # Десятичные дроби (до миллионых включительно)
    for m in finditer(r'(\d+),(\d{1,6})(\b|$)', text):
        length = len(m.group(2))
        full = feminin(m.group(1))
        if full[-1] == 'а':
            full += '_целая '
        else:
            full += '_целых '
        if length == 1:
            frac = '_десят'
        elif length == 2:
            frac = '_сот'
        elif length == 3:
            frac = '_тысячн'
        elif length == 4:
            frac = '_десятитысячн'
        elif length == 5:
            frac = '_стотысячн'
        else:
            frac = '_миллионн'
        decimal = feminin(m.group(2))
        if decimal[-1] == 'а':
            frac += 'ая'
        else:
            frac += 'ых'
        text = text.replace(m.group(),  full + decimal + frac + m.group(3), 1)

    # Коррекция чтения десятичных дробей в косвенных падежах

    # Творительный
    for m in finditer(r'\b([Пп]о сравнению с )(|\d+_)(|одна_|две_)(целая|целых) (|\d+_)(|одна_|две_)(десят|сот|тысячн|десятитысячн|стотысячн|миллионн)(ая|ых)\b', text):
        if m.group(2) != '':
            full = cardinal(m.group(2)[:-1], t_ca) + '_'
        else:
            full = ''
        if m.group(3) == 'одна_':
            full += 'одной_'
        elif m.group(3) == 'две_':
            full += 'двумя_'
        if full == 'нолём_':
            full += 'целых'
        elif m.group(4) == 'целая':
            full += 'целой'
        else:
            full += 'целыми'
        if m.group(5) != '':
            frac = cardinal(m.group(5)[:-1], t_ca) + '_'
        else:
            frac = ''
        if m.group(6) == 'одна_':
            frac += 'одной_'
        elif m.group(6) == 'две_':
            frac += 'двумя_'
        if frac == 'нолём_':
            rd = 'ых'
        elif m.group(8) == 'ая':
            rd = 'ой'
        else:
            rd = 'ыми'
        text = text.replace(m.group(), m.group(1) + full + ' ' + frac + m.group(7) + rd, 1)

    # Родительный 
    for m in finditer(r'\b([Бб]олее|[Мм]енее|[Оо]коло|[Сс]|[Сс]выше|[Дд]ля|[Дд]о|[Ии]з|[Оо]т|[Бб]ез|[Уу]|[Вв] течение|[Пп]орядка|[Пп]осле|достиг[алнш][веиотуьщюя]{1,4}) (|\d+_)(|одна_|две_)(целая|целых) (|\d+_)(|одна_|две_)(десят|сот|тысячн|десятитысячн|стотысячн|миллионн)(ая|ых)\b', text):
        if m.group(2) != '':
            full = cardinal(m.group(2)[:-1], r_ca) + '_'
        else:
            full = ''
        if m.group(3) == 'одна_':
            full += 'одной_'
        elif m.group(3) == 'две_':
            full += 'двух_'
        if m.group(4) == 'целая':
            full += 'целой'
        else:
            full += 'целых'
        if m.group(5) != '':
            frac = cardinal(m.group(5)[:-1], r_ca) + '_'
        else:
            frac = ''
        if m.group(6) == 'одна_':
            frac += 'одной_'
        elif m.group(6) == 'две_':
            frac += 'двух_'
        if m.group(8) == 'ая':
            rd = 'ой'
        else:
            rd = 'ых'
        text = text.replace(m.group(), m.group(1) + ' ' + full + ' ' + frac + m.group(7) + rd, 1)

    # Дательный
    for m in finditer(r'\b([Кк] |равно )(|\d+_)(|одна_|две_)(целая|целых) (|\d+_)(|одна_|две_)(десят|сот|тысячн|десятитысячн|стотысячн|миллионн)(ая|ых)\b', text):
        if m.group(2) != '':
            full = cardinal(m.group(2)[:-1], d_ca) + '_'
        else:
            full = ''
        if m.group(3) == 'одна_':
            full += 'одной_'
        elif m.group(3) == 'две_':
            full += 'двум_'
        if full == 'нолю_':
            full += 'целых'
        elif m.group(4) == 'целая':
            full += 'целой'
        else:
            full += 'целым'
        if m.group(5) != '':
            frac = cardinal(m.group(5)[:-1], d_ca) + '_'
        else:
            frac = ''
        if m.group(6) == 'одна_':
            frac += 'одной_'
        elif m.group(6) == 'две_':
            frac += 'двум_'
        if frac == 'нолю_':
            rd = 'ых'
        elif m.group(8) == 'ая':
            rd = 'ой'
        else:
            rd = 'ым'
        text = text.replace(m.group(), m.group(1) + full + ' ' + frac + m.group(7) + rd, 1)

    # Винительный
    for m in finditer(r'\b([Вв] )(|\d+_)(|одна_|две_)(целая|целых) (|\d+_)(|одна_|две_)(десят|сот|тысячн|десятитысячн|стотысячн|миллионн)(ая|ых)\b', text):
        if m.group(2) != '':
            full = cardinal(m.group(2)[:-1], v_ca) + '_'
        else:
            full = ''
        if m.group(3) == 'одна_':
            full += 'одну_'
        else:
            full += m.group(3)
        if m.group(4) == 'целая':
            full += 'целую'
        else:
            full += 'целых'
        if m.group(5) != '':
            frac = cardinal(m.group(5)[:-1], v_ca) + '_'
        else:
            frac = ''
        if m.group(6) == 'одна_':
            frac += 'одну_'
        else:
            frac += m.group(6)
        if m.group(8) == 'ая':
            rd = 'ую'
        else:
            rd = 'ых'
        text = text.replace(m.group(), m.group(1) + full + ' ' + frac + m.group(7) + rd, 1)

    # Предложный
    for m in finditer(r'\b([Оо]б? |[Пп]ри )(|\d+_)(|одна_|две_)(целая|целых) (|\d+_)(|одна_|две_)(десят|сот|тысячн|десятитысячн|стотысячн|миллионн)(ая|ых)\b', text):
        if m.group(2) != '':
            full = cardinal(m.group(2)[:-1], p_ca) + '_'
        else:
            full = ''
        if m.group(3) == 'одна_':
            full += 'одной_'
        elif m.group(3) == 'две_':
            full += 'двух_'
        if m.group(4) == 'целая':
            full += 'целой'
        else:
            full += 'целых'
        if m.group(5) != '':
            frac = cardinal(m.group(5)[:-1], p_ca) + '_'
        else:
            frac = ''
        if m.group(6) == 'одна_':
            frac += 'одной_'
        elif m.group(6) == 'две_':
            frac += 'двух_'
        if m.group(8) == 'ая':
            rd = 'ой'
        else:
            rd = 'ых'
        text = text.replace(m.group(), m.group(1) + full + ' ' + frac + m.group(7) + rd, 1)

    # Римские цифры
    for m in finditer(r'\b[IVXLCDM]+\b', text):
        text = text.replace(m.group(), roman2arabic(m.group()), 1)

    for sample in samples:
        text = sub(sample[0], sample[1], text)

    # Порядковые числительные

    for m in finditer(r'(\d+)( зимни[еимх]{1,2}| летни[еимх]{1,2}|)( Олимпийски)(е|ми|м\b|х)', text):
        text = text.replace(m.group(), ordinal(m.group(1), mn_pd[m.group(4)]) + m.group(2) + m.group(3) + m.group(4), 1)

    for m in finditer(r'(\d+0)(-\d+0-е годы)', text):
        text = text.replace(m.group(), ordinal(m.group(1), i_mn) + m.group(2), 1)

    for m in finditer(r'(\d+0)-е( годы)', text):
        text = text.replace(m.group(), ordinal(m.group(1), i_mn) + m.group(2), 1)

    for m in finditer(r'([Вв] )(\d*0)-е\b', text):
        text = text.replace(m.group(), m.group(1) + ordinal(m.group(2), i_mn), 1)

    for m in finditer(r'(\d+0)(-\d+0-м годам)', text):
        text = text.replace(m.group(), ordinal(m.group(1), d_mn) + m.group(2), 1)

    for m in finditer(r'([Кк] )(\d+0)-м\b', text):
        text = text.replace(m.group(), m.group(1) + ordinal(m.group(2), d_mn), 1)

    for m in finditer(r'(\d+)-х-', text):
        text = text.replace(m.group(), ordinal(m.group(1), r_mn) + ' ', 1)

    for m in finditer(r'(\d+)-я\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), i_zh), 1)

    for m in finditer(r'\b([Вв]о? |[Нн]а )(\d+)-ю\b', text):
        text = text.replace(m.group(), m.group(1) + ordinal(m.group(2), r_zh), 1)

    for m in finditer(r'(\d+)-ю\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), v_zh), 1)

    for m in finditer(r'\b([Вв]о? |[Нн]а |[Пп]ри )(\d+)-м\b', text):
        text = text.replace(m.group(), m.group(1) + ordinal(m.group(2), p_mu), 1)

    for m in finditer(r'\b([Кк]о? |[Пп]о )(\d*[02-9][02-9]|[02-9]|\d*1\d) ([а-я]+[еиую])\b', text):
        number = ''
        if ms_d.find('|' + m.group(3) + '|') != -1:
            number = ordinal(m.group(2), d_mu)
        else:
            if zh_dp.find('|' + m.group(3) + '|') != -1:
                number = ordinal(m.group(2), d_zh)
        if number != '':
            text = text.replace(m.group(), m.group(1) + number + ' ' + m.group(3), 1)

    for m in finditer(r'\b([Сс] )(\d+)-м\b', text):
        text = text.replace(m.group(), m.group(1) + ordinal(m.group(2), t_mu), 1)

    for m in finditer(r'(\d+)-му\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), d_mu), 1)

    for m in finditer(r'(\d+)-го\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), r_mu), 1)

    for m in finditer(r'(\d+)-ми\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), t_mn), 1)

    for m in finditer(r'(\d*1\d|\d*[02-9][015-9]|[015-9])-х\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), r_mn), 1)

    for m in finditer(r'\b([Дд]о|[Пп]осле|[Сс]о?) (\d+)-й\b', text):
        text = text.replace(m.group(), m.group(1) + ' ' + ordinal(m.group(2), r_zh), 1)

    for m in finditer(r'(\d+)-й\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), i_mu), 1)

    for m in finditer(r'(\d+)(-| и )(\d+)( годами| веками)', text):
        text = text.replace(m.group(), ordinal(m.group(1), t_mu) + m.group(2) + ordinal(m.group(3), t_mu) + m.group(4), 1)

    for m in finditer(r'(\d+)-м (год(у|ах)|век(е|ах)|(сто|тысяче)лети(и|ях))', text):
        text = text.replace(m.group(), ordinal(m.group(1), p_mu) + ' ' + m.group(2), 1)

    for m in finditer(r'(\d+)-м( [а-яА-Я]+м\b)', text):
        text = text.replace(m.group(), ordinal(m.group(1), t_mu) + m.group(2), 1)

    for m in finditer(r'(\d+)-е\b', text):
        text = text.replace(m.group(), ordinal(m.group(1), i_sr), 1)

    # Числительное может быть только притяжательным при существительном

    for m in finditer(r'\b(\d*[02-9][02-9]|[2-9]|\d*1\d) ([а-я]+)\b', text):
        number = ''
        if sr_iv.find('|' + m.group(2) + '|') != -1:
            number = ordinal(m.group(1), i_sr)
        if m.group(2)[-1] == 'у' or m.group(2)[-1] == 'ю' or m.group(2)[-1] == 'ь':
            number = ordinal(m.group(1), v_zh)
        if number != '':
            text = text.replace(m.group(),number + ' ' + m.group(2), 1)

    for m in finditer(r'\b(\d*[02-9][02-9]|[02-9]|\d*1\d) ([а-я]+[еиу])\b', text):
        number = ''
        if ms_p.find('|' + m.group(2) + '|') != -1:
            number = ordinal(m.group(1), p_mu)
        else:
            if zh_dp.find('|' + m.group(2) + '|') != -1:
                number = ordinal(m.group(1), p_zh)
        if number != '':
            text = text.replace(m.group(), number + ' ' + m.group(2), 1)

    # Склонение порядковых числительных при именах собственных
    for m in finditer(r'(Александр|Иван|Иоанн|Пав[е]?л|П[её]тр|Ф[её]дор|Васили|Лжедмитри|Никола)' + '(|а|е|ем|й|ом|у|ю|я)' + r' (\d+)', text):
        text = text.replace(m.group(), m.group(1) + m.group(2) + ' ' + ordinal(m.group(3), mu_pd[m.group(2)]), 1)
    for m in finditer(r'(Анн|Екатерин)' + '(|а|е|ой|у|ы)' + r' (\d+)', text):
        text = text.replace(m.group(), m.group(1) + m.group(2) + ' ' + ordinal(m.group(3), zh_pd[m.group(2)]), 1)

    # Время в формате (ч)ч:мм

    for m in finditer(r'\b([Вв] \d{1,2}):(\d{2})\b', text):
        minutes = feminin(m.group(2))
        if minutes[-2:] == 'на':
            minutes = minutes[:-1] + 'у'
        text = text.replace(m.group(), m.group(1) + ' ' + minutes, 1)

    for m in finditer(r'\b([Кк] )(\d{1,2}):(\d{2})\b', text):
        hours = cardinal(m.group(2), d_ca)
        minutes = cardinal(m.group(3), d_ca)
        if minutes[-2:] == 'му':
            minutes = minutes[:-2] + 'й'
        if m.group(3) == '00':
            minutes = '00'
        elif m.group(3)[0] == '0':
            minutes = '0_' + minutes
        text = text.replace(m.group(), m.group(1) + hours + ' ' + minutes, 1)

    for m in finditer(r'\b([Дд]о |[Пп]осле |[Оо]коло |[Сс] )(\d{1,2}):(\d{2})\b', text):
        hours = cardinal(m.group(2), r_ca)
        minutes = cardinal(m.group(3), r_ca)
        if minutes[-2:] == 'го':
            minutes = minutes[:-2] + 'й'
        if m.group(3) == '00':
            minutes = '00'
        elif m.group(3)[0] == '0':
            minutes = '0_' + minutes
        text = text.replace(m.group(), m.group(1) + hours + ' ' + minutes, 1)

#    for m in finditer(r'\b(\d{1,2}):(\d{2})\b', text):
#        minutes = feminin(m.group(2))
#        if m.group(2) == '00':
#            minutes = '00'
#        elif m.group(2)[0] == '0':
#            minutes = '0_' + minutes
#        text = text.replace(m.group(), m.group(1) + ' ' + minutes, 1)

    # Количественные числительные

    for m in finditer(r'(\d+)-(часов[агеиймоухыюя]{2,3}|(тон|секунд|минут|месяч)н[агеиймоухыюя]{2,4}|лет[геиймнохюя]{2,4}|((|кило)граммов|(|кило|милли|санти)метров|тысяч|миллионн[агеиймоухыюя]{2,3}|миллиардн|процентн)[агеиймоухыюя]{2,3})\b', text):
        if m.group(1) == '100':
            num = 'сто'
        elif m.group(1) == '1000':
            num = 'тысяче'
        elif m.group(1)[-3:] == '000':
            num = cardinal(m.group(1)[:-3], r_ca) + 'тысяче'
        else:
            num = cardinal(m.group(1), r_ca) + '-'
        text = text.replace(m.group(), num + m.group(2), 1)

    # Винительный падеж (муж. род)
    for m in finditer(r'\b(\d*[02-9]1|[1-4]) ' + mu_v, text):
        number = m.group(1)
        if m.group(2)[-1] == 'а' or m.group(2)[-1] == 'я':
            if m.group(1) == '1':
                number = 'одного'
            elif m.group(1)[:-1] == '1' or (len(m.group(1)) > 1 and m.group(1)[-2] != '1'):
                number = m.group(1)[:-1] + '0_одного'
        else:
            if m.group(1) == '2':
                number = 'двух'
            elif m.group(1) == '3':
                number = 'трех'
            elif m.group(1) == '4':
                number = 'четырех'
        text = text.replace(m.group(), number + '_' + m.group(2), 1)

    # Винительный падеж (жен. род)
    for m in finditer(r'([Вв] |[Зз]а |[Нн]а |[Пп]ро |[Чч]ерез )(\d*[02-9]1|[1-4]) ' + zh_v, text):
        number = ''
        if m.group(3)[-1] == 'у' or m.group(3)[-1] == 'ю' or m.group(3)[-1] == 'ь':
            if m.group(2) == '1':
                number = 'одну '
            elif m.group(2)[-1] == '1':
                number = m.group(2)[:-1] + '0_одну '
        else:
            if m.group(2) == '2':
                number = 'двух '
            elif m.group(2) == '3':
                number = 'трех '
            elif m.group(2) == '4':
                number = 'четырех '
        if number != '':
            text = text.replace(m.group(), m.group(1) + number + m.group(3), 1)

    # Творительный падеж
    for m in finditer(r'\b([Зз]а |[Нн]ад |[Пп]од |[Пп]еред |[Сс] )(\d+)( [а-я]+)(ми|[ео]м|[ео]й|ью)\b', text):
        number = cardinal(m.group(2), t_ca)
        if m.group(4) == 'ей' or m.group(4) == 'ой' or m.group(4) == 'ью':
            number = number[:-5] + 'одной'
        text = text.replace(m.group(), m.group(1) + number + m.group(3) + m.group(4), 1)

    # Родительный падеж
    for m in finditer(r'\b([Оо]т |[Сс] )(\d+)( до \d+ [а-я]+)\b', text):
        number = cardinal(m.group(2), r_ca)
        if zh_r.find('|' + m.group(3) + '|') != -1:
            number = number[:-6] + 'одной'
        text = text.replace(m.group(), m.group(1) + number + m.group(3), 1)

    for m in finditer(r'\b([Бб]олее|[Мм]енее|[Оо]коло|[Сс]выше|[Дд]ля|[Дд]о|[Ии]з|[Оо]т|[Бб]ез|[Уу]|[Вв] течение|[Пп]орядка|[Пп]осле|достиг[алнш][веиотуьщюя]{1,4}) (\d+) ([а-я]+)\b', text):
        number = cardinal(m.group(2), r_ca)
        if zh_r.find('|' + m.group(3) + '|') != -1:
            number = number[:-6] + 'одной'
        text = text.replace(m.group(), m.group(1) + ' ' + number + ' ' + m.group(3), 1)

    # Дательный падеж
    for m in finditer(r'\b([Кк] |[Пп]о |равно )(\d+) ([а-я]+([ая]м|у|ю|е|и))\b', text):
        number = ''
        if 20 > int(m.group(2)[-2:]) > 9:
            if m.group(3)[-1] == 'м':
                number = cardinal(m.group(2), d_ca)
        else:
            if m.group(2)[-1] == '1':
                if m.group(3) != 'х':
                    number = cardinal(m.group(2), d_ca)
                else:
                    if zh_dp.find('|' + m.group(3) + '|') != -1:
                        number = number[:-1] + 'й'
            else:
                if m.group(3)[-1] == 'м':
                    number = cardinal(m.group(2), d_ca)            
        if number != '':
            text = text.replace(m.group(), m.group(1) + number + ' ' + m.group(3), 1)

    # Предложный падеж
    for m in finditer(r'\b([Вв] |[Нн]а |[Оо]б? |[Пп]ри )(\d+) ([а-я]+([ая]х|е|и|у))\b', text):
        number = ''
        if len(m.group(2)) > 1:
            if m.group(2)[-2] == '1' or m.group(2)[-1] != '1':
                if m.group(3)[-1] == 'х':
                    number = cardinal(m.group(2), p_ca)
        if m.group(3)[-1] != 'х' and m.group(2)[-1] == '1':
#        if ms_p.find('|' + m.group(3) + '|') != -1 and m.group(2)[-1] == '1':
            number = cardinal(m.group(2), p_ca)
            if zh_dp.find('|' + m.group(3) + '|') != -1:
                number = number[:-1] + 'й'
        if number != '':
            text = text.replace(m.group(), m.group(1) + number + ' ' + m.group(3), 1)

    # Женский род (им./вин. пад.)
    for m in finditer(r'(\d*[02-9][12]|[12]) ' + zh_i, text):
        if (m.group(1)[-1] == '1' and (m.group(2)[-1] == 'а' or m.group(2)[-1] == 'я' or m.group(2)[-1] == 'ь')) or (m.group(1)[-1] == '2' and (m.group(2)[-1] == 'и' or m.group(2)[-1] == 'ы')):
            text = text.replace(m.group(), feminin(m.group(1)) + ' ' + m.group(2), 1)

    # Средний род (им./вин. пад.)
    for m in finditer(r'(\d*[02-9]1|1) ([а-я]+[ео])\b', text):
        if sr_iv.find('|' + m.group(2) + '|') != -1:
            if len(m.group(1)) > 1:
                if int(m.group(1)[:-1]) != 0:
                    num = m.group(1)[:-1] + '0_одно'
                else:
                    num = m.group(1)[:-1] + '_одно'
            else:
                num = m.group(1)[:-1] + 'одно'
            text = text.replace(m.group(), num + ' ' + m.group(2), 1)

    # Наращения при количественных числительных недопустимы, но распространены
    for m in finditer(r'(\d+)(-ти|-х)\b', text):
        text = text.replace(m.group(), cardinal(m.group(1), r_ca), 1)

    # Коррекция формы единиц измерения в косвенных падежах
    for sample in postsamples:
        text = sub(sample[0], sample[1], text)

    # Буквы греческого алфавита
    greekletters = 'ΑαΒβΓγΔδΕεΖζΗηΘθΙιΚκΛλΜμΝνΞξΟοΠπΡρΣσΤτΥυΦφΧχΨψΩως'
    letternames = ('альфа', 'бета', 'гамма', 'дельта', 'эпсилон', 'дзета', 'эта', 'тета', 'йота', 'каппа', 'лямбда', 'мю', 'ню', 'кси', 'омикрон', 'пи', 'ро', 'сигма', 'тау', 'ипсилон', 'фи', 'хи', 'пси', 'омега', 'сигма')
    for j in greekletters:
        text = text.replace(j, letternames[greekletters.index(j)//2], 1)

    return text
